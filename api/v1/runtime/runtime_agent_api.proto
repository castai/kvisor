syntax = "proto3";

package runtime.v1;

import "api/google/protobuf/timestamp.proto";
import "api/v1/runtime/common.proto";

option go_package = "github.com/castai/kvisord/api/runtime/v1";

// RuntimeSecurityAgentAPI is used in kvisord. Should be mirrored.
service RuntimeSecurityAgentAPI {
  rpc GetConfiguration(GetConfigurationRequest) returns (GetConfigurationResponse) {}
  rpc EventsWriteStream(stream Event) returns (WriteStreamResponse) {}
  rpc LogsWriteStream(stream LogEvent) returns (WriteStreamResponse) {}
  rpc ContainerStatsWriteStream(stream ContainerStatsBatch) returns (WriteStreamResponse) {}
  rpc NetflowWriteStream(stream Netflow) returns (WriteStreamResponse) {}
  rpc ProcessEventsWriteStream(stream ProcessTreeEvent) returns (WriteStreamResponse) {}

  rpc GetSyncState(GetSyncStateRequest) returns (GetSyncStateResponse) {}
  rpc UpdateSyncState(UpdateSyncStateRequest) returns (UpdateSyncStateResponse) {}

  rpc KubernetesDeltaBatchIngest(stream KubernetesDeltaBatch) returns (stream KubernetesDeltaIngestResponse) {}
  // Deprecated. Should use KubernetesDeltaBatchIngest.
  rpc KubernetesDeltaIngest(stream KubernetesDeltaItem) returns (stream KubernetesDeltaIngestResponse) {}
  rpc ImageMetadataIngest(ImageMetadata) returns (ImageMetadataIngestResponse) {}
  rpc KubeBenchReportIngest(KubeBenchReport) returns (KubeBenchReportIngestResponse) {}
  rpc KubeLinterReportIngest(KubeLinterReport) returns (KubeLinterReportIngestResponse) {}
}

message GetConfigurationRequest {
  reserved 1, 2; // Previously configs there strongly typed.
  oneof current_config {
    bytes controller = 3;
    bytes agent = 4;
  }
}

message GetConfigurationResponse {
  Configuration config = 1;
}

message Configuration {}

enum EventType {
  UNKNOWN = 0;
  EVENT_EXEC = 1;
  EVENT_DNS = 2;
  EVENT_TCP_CONNECT = 3;
  EVENT_TCP_CONNECT_ERROR = 4;
  EVENT_TCP_LISTEN = 5;
  EVENT_FILE_CHANGE = 6;
  EVENT_PROCESS_OOM = 7;
  EVENT_MAGIC_WRITE = 8;
  EVENT_SIGNATURE = 9;
  EVENT_TTY_WRITE = 10;
  EVENT_STDIO_VIA_SOCKET = 11;
  EVENT_SSH = 12;

  EVENT_ANY = 999;
}

message Event {
  EventType event_type = 1;
  uint64 timestamp = 2; // Stored as unix timestamp in nanoseconds.
  string process_name = 3;
  string namespace = 4;
  string pod_name = 5;
  string container_name = 6;
  string workload_name = 7;
  string workload_kind = 13;
  string pod_uid = 8;
  string container_id = 9;
  uint64 cgroup_id = 10;
  uint32 host_pid = 11;
  string workload_uid = 12;
  string node_name = 14;

  oneof data {
    v1.Exec exec = 21;
    v1.DNS dns = 22;
    v1.File file = 23;
    v1.Tuple tuple = 24;
    v1.SignatureEvent signature = 25;
    v1.Any any = 26;
    v1.StdioViaSocketFinding stdio_via_socket = 27;
    v1.SSHData ssh = 28;
  }
}

message WriteStreamResponse {}

message SendLogsResponse {}

message ContainerStatsBatch {
  repeated ContainerStats items = 1;
}

message ContainerStats {
  string namespace = 1;
  string pod_name = 2;
  string container_name = 3;
  string workload_name = 4;
  string workload_kind = 7;
  string pod_uid = 5;
  string container_id = 6;
  repeated v1.Stats stats = 21;
}

enum KubernetesDeltaItemEvent {
  DELTA_ADD = 0;
  DELTA_UPDATE = 1;
  DELTA_REMOVE = 2;
}

message KubernetesDeltaItem {
  KubernetesDeltaItemEvent event = 1;
  string object_uid = 2;
  string object_name = 3;
  string object_namespace = 4;
  string object_kind = 5;
  string object_api_version = 6;
  google.protobuf.Timestamp object_created_at = 7;
  repeated Container object_containers = 8;
  string object_owner_uid = 9;
  map<string, string> object_labels = 10;
  map<string, string> object_annotations = 11;
  bytes object_status = 12;
  bytes object_spec = 13;
}

message KubernetesDeltaBatch {
  repeated KubernetesDeltaItem items = 1;
}

message Container {
  string name = 1;
  string image_name = 2;
}

message KubernetesDeltaIngestResponse {}

message ImageMetadata {
  string image_name = 1;
  string image_id = 2;
  string image_digest = 3;
  string architecture = 5; // used as fallback, in case image manifest doesn't have architecture set
  string os_name = 6;
  google.protobuf.Timestamp created_at = 7;
  repeated string resource_ids = 8;

  bytes packages = 9; // JSON containing []github.com/aquasecurity/trivy/pkg/fanal/types.BlobInfo type.
  bytes manifest = 10; // JSON containing github.com/google/go-containerregistry/pkg/v1.Manifest type.
  bytes index = 11; // JSON containing github.com/google/go-containerregistry/pkg/v1.IndexManifest type.
  bytes config_file = 12; // JSON containing github.com/google/go-containerregistry/pkg/v1.ConfigFile type.
}

message ImageMetadataIngestResponse {}

message GetSyncStateRequest {
  repeated string image_ids = 1;
}
message GetSyncStateResponse {
  ImagesSyncState images = 1;
}

message ImagesSyncState {
  bool full_resync_required = 1;
  repeated Image images = 2;
}

enum ImageScanStatus {
  IMAGE_SCAN_STATUS_UNKNOWN = 0;
  IMAGE_SCAN_STATUS_SCANNED = 1;
  IMAGE_SCAN_STATUS_PENDING = 2;
  IMAGE_SCAN_STATUS_SCAN_ERROR = 3;
}

message Image {
  string id = 1;
  string name = 2;
  string architecture = 3;
  repeated string resource_ids = 4;
  ImageScanStatus scan_status = 5;
  string scan_error = 6;
}

message UpdateSyncStateRequest {
  bool full_snapshot = 1;
  repeated Image images = 2;
}

message UpdateSyncStateResponse {}

message KubeBenchReport {
  repeated KubeBenchControls controls = 1;
  KubeBenchNode node = 2;
}
message KubeBenchReportIngestResponse {}

message KubeBenchNode {
  string node_name = 1;
  string resource_uid = 2;
}

message KubeBenchControls {
  string version = 1;
  repeated KubeBenchGroup groups = 2;
}

message KubeBenchGroup {
  repeated KubeBenchCheck checks = 1;
}

message KubeBenchCheck {
  string id = 1;
  string text = 2;
  repeated string test_info = 3;
  string state = 4;
}

message KubeLinterReport {
  repeated KubeLinterCheck checks = 1;
}
message KubeLinterReportIngestResponse {}

message KubeLinterCheck {
  string resource_uid = 1;
  uint64 passed = 2; // Represented as bitmasks of passed checks.
  uint64 failed = 3; // Represented as bitmasks of failed checks.
}

message Process {
  uint32 pid = 1;
  uint32 ppid = 2;
  uint64 start_time = 3;
  uint64 parent_start_time = 4;
  repeated string args = 5;
  string filepath = 6;
  uint64 exit_time = 7;
}

enum ProcessAction {
  PROCESS_ACTION_UNKNOWN = 0;
  PROCESS_ACTION_EXEC = 1;
  PROCESS_ACTION_FORK = 2;
  PROCESS_ACTION_EXIT = 3;
}

message ProcessEvent {
  uint64 timestamp = 1; // Stored as unix timestamp in nanoseconds.
  string container_id = 2;
  Process process = 3;
  ProcessAction action = 4;
}

message ProcessTreeEvent {
  bool initial = 1;
  repeated ProcessEvent events = 2;
}
