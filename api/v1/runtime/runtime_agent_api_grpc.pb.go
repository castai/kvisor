// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v5.27.1
// source: api/v1/runtime/runtime_agent_api.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	RuntimeSecurityAgentAPI_GetConfiguration_FullMethodName           = "/runtime.v1.RuntimeSecurityAgentAPI/GetConfiguration"
	RuntimeSecurityAgentAPI_EventsWriteStream_FullMethodName          = "/runtime.v1.RuntimeSecurityAgentAPI/EventsWriteStream"
	RuntimeSecurityAgentAPI_LogsWriteStream_FullMethodName            = "/runtime.v1.RuntimeSecurityAgentAPI/LogsWriteStream"
	RuntimeSecurityAgentAPI_ContainerStatsWriteStream_FullMethodName  = "/runtime.v1.RuntimeSecurityAgentAPI/ContainerStatsWriteStream"
	RuntimeSecurityAgentAPI_NetflowWriteStream_FullMethodName         = "/runtime.v1.RuntimeSecurityAgentAPI/NetflowWriteStream"
	RuntimeSecurityAgentAPI_GetSyncState_FullMethodName               = "/runtime.v1.RuntimeSecurityAgentAPI/GetSyncState"
	RuntimeSecurityAgentAPI_UpdateSyncState_FullMethodName            = "/runtime.v1.RuntimeSecurityAgentAPI/UpdateSyncState"
	RuntimeSecurityAgentAPI_KubernetesDeltaBatchIngest_FullMethodName = "/runtime.v1.RuntimeSecurityAgentAPI/KubernetesDeltaBatchIngest"
	RuntimeSecurityAgentAPI_KubernetesDeltaIngest_FullMethodName      = "/runtime.v1.RuntimeSecurityAgentAPI/KubernetesDeltaIngest"
	RuntimeSecurityAgentAPI_ImageMetadataIngest_FullMethodName        = "/runtime.v1.RuntimeSecurityAgentAPI/ImageMetadataIngest"
	RuntimeSecurityAgentAPI_KubeBenchReportIngest_FullMethodName      = "/runtime.v1.RuntimeSecurityAgentAPI/KubeBenchReportIngest"
	RuntimeSecurityAgentAPI_KubeLinterReportIngest_FullMethodName     = "/runtime.v1.RuntimeSecurityAgentAPI/KubeLinterReportIngest"
)

// RuntimeSecurityAgentAPIClient is the client API for RuntimeSecurityAgentAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// RuntimeSecurityAgentAPI is used in kvisord. Should be mirrored.
type RuntimeSecurityAgentAPIClient interface {
	GetConfiguration(ctx context.Context, in *GetConfigurationRequest, opts ...grpc.CallOption) (*GetConfigurationResponse, error)
	EventsWriteStream(ctx context.Context, opts ...grpc.CallOption) (RuntimeSecurityAgentAPI_EventsWriteStreamClient, error)
	LogsWriteStream(ctx context.Context, opts ...grpc.CallOption) (RuntimeSecurityAgentAPI_LogsWriteStreamClient, error)
	ContainerStatsWriteStream(ctx context.Context, opts ...grpc.CallOption) (RuntimeSecurityAgentAPI_ContainerStatsWriteStreamClient, error)
	NetflowWriteStream(ctx context.Context, opts ...grpc.CallOption) (RuntimeSecurityAgentAPI_NetflowWriteStreamClient, error)
	GetSyncState(ctx context.Context, in *GetSyncStateRequest, opts ...grpc.CallOption) (*GetSyncStateResponse, error)
	UpdateSyncState(ctx context.Context, in *UpdateSyncStateRequest, opts ...grpc.CallOption) (*UpdateSyncStateResponse, error)
	KubernetesDeltaBatchIngest(ctx context.Context, opts ...grpc.CallOption) (RuntimeSecurityAgentAPI_KubernetesDeltaBatchIngestClient, error)
	// Deprecated. Should use KubernetesDeltaBatchIngest.
	KubernetesDeltaIngest(ctx context.Context, opts ...grpc.CallOption) (RuntimeSecurityAgentAPI_KubernetesDeltaIngestClient, error)
	ImageMetadataIngest(ctx context.Context, in *ImageMetadata, opts ...grpc.CallOption) (*ImageMetadataIngestResponse, error)
	KubeBenchReportIngest(ctx context.Context, in *KubeBenchReport, opts ...grpc.CallOption) (*KubeBenchReportIngestResponse, error)
	KubeLinterReportIngest(ctx context.Context, in *KubeLinterReport, opts ...grpc.CallOption) (*KubeLinterReportIngestResponse, error)
}

type runtimeSecurityAgentAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewRuntimeSecurityAgentAPIClient(cc grpc.ClientConnInterface) RuntimeSecurityAgentAPIClient {
	return &runtimeSecurityAgentAPIClient{cc}
}

func (c *runtimeSecurityAgentAPIClient) GetConfiguration(ctx context.Context, in *GetConfigurationRequest, opts ...grpc.CallOption) (*GetConfigurationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetConfigurationResponse)
	err := c.cc.Invoke(ctx, RuntimeSecurityAgentAPI_GetConfiguration_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeSecurityAgentAPIClient) EventsWriteStream(ctx context.Context, opts ...grpc.CallOption) (RuntimeSecurityAgentAPI_EventsWriteStreamClient, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	stream, err := c.cc.NewStream(ctx, &RuntimeSecurityAgentAPI_ServiceDesc.Streams[0], RuntimeSecurityAgentAPI_EventsWriteStream_FullMethodName, cOpts...)
	if err != nil {
		return nil, err
	}
	x := &runtimeSecurityAgentAPIEventsWriteStreamClient{ClientStream: stream}
	return x, nil
}

type RuntimeSecurityAgentAPI_EventsWriteStreamClient interface {
	Send(*Event) error
	CloseAndRecv() (*WriteStreamResponse, error)
	grpc.ClientStream
}

type runtimeSecurityAgentAPIEventsWriteStreamClient struct {
	grpc.ClientStream
}

func (x *runtimeSecurityAgentAPIEventsWriteStreamClient) Send(m *Event) error {
	return x.ClientStream.SendMsg(m)
}

func (x *runtimeSecurityAgentAPIEventsWriteStreamClient) CloseAndRecv() (*WriteStreamResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(WriteStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *runtimeSecurityAgentAPIClient) LogsWriteStream(ctx context.Context, opts ...grpc.CallOption) (RuntimeSecurityAgentAPI_LogsWriteStreamClient, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	stream, err := c.cc.NewStream(ctx, &RuntimeSecurityAgentAPI_ServiceDesc.Streams[1], RuntimeSecurityAgentAPI_LogsWriteStream_FullMethodName, cOpts...)
	if err != nil {
		return nil, err
	}
	x := &runtimeSecurityAgentAPILogsWriteStreamClient{ClientStream: stream}
	return x, nil
}

type RuntimeSecurityAgentAPI_LogsWriteStreamClient interface {
	Send(*LogEvent) error
	CloseAndRecv() (*WriteStreamResponse, error)
	grpc.ClientStream
}

type runtimeSecurityAgentAPILogsWriteStreamClient struct {
	grpc.ClientStream
}

func (x *runtimeSecurityAgentAPILogsWriteStreamClient) Send(m *LogEvent) error {
	return x.ClientStream.SendMsg(m)
}

func (x *runtimeSecurityAgentAPILogsWriteStreamClient) CloseAndRecv() (*WriteStreamResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(WriteStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *runtimeSecurityAgentAPIClient) ContainerStatsWriteStream(ctx context.Context, opts ...grpc.CallOption) (RuntimeSecurityAgentAPI_ContainerStatsWriteStreamClient, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	stream, err := c.cc.NewStream(ctx, &RuntimeSecurityAgentAPI_ServiceDesc.Streams[2], RuntimeSecurityAgentAPI_ContainerStatsWriteStream_FullMethodName, cOpts...)
	if err != nil {
		return nil, err
	}
	x := &runtimeSecurityAgentAPIContainerStatsWriteStreamClient{ClientStream: stream}
	return x, nil
}

type RuntimeSecurityAgentAPI_ContainerStatsWriteStreamClient interface {
	Send(*ContainerStatsBatch) error
	CloseAndRecv() (*WriteStreamResponse, error)
	grpc.ClientStream
}

type runtimeSecurityAgentAPIContainerStatsWriteStreamClient struct {
	grpc.ClientStream
}

func (x *runtimeSecurityAgentAPIContainerStatsWriteStreamClient) Send(m *ContainerStatsBatch) error {
	return x.ClientStream.SendMsg(m)
}

func (x *runtimeSecurityAgentAPIContainerStatsWriteStreamClient) CloseAndRecv() (*WriteStreamResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(WriteStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *runtimeSecurityAgentAPIClient) NetflowWriteStream(ctx context.Context, opts ...grpc.CallOption) (RuntimeSecurityAgentAPI_NetflowWriteStreamClient, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	stream, err := c.cc.NewStream(ctx, &RuntimeSecurityAgentAPI_ServiceDesc.Streams[3], RuntimeSecurityAgentAPI_NetflowWriteStream_FullMethodName, cOpts...)
	if err != nil {
		return nil, err
	}
	x := &runtimeSecurityAgentAPINetflowWriteStreamClient{ClientStream: stream}
	return x, nil
}

type RuntimeSecurityAgentAPI_NetflowWriteStreamClient interface {
	Send(*Netflow) error
	CloseAndRecv() (*WriteStreamResponse, error)
	grpc.ClientStream
}

type runtimeSecurityAgentAPINetflowWriteStreamClient struct {
	grpc.ClientStream
}

func (x *runtimeSecurityAgentAPINetflowWriteStreamClient) Send(m *Netflow) error {
	return x.ClientStream.SendMsg(m)
}

func (x *runtimeSecurityAgentAPINetflowWriteStreamClient) CloseAndRecv() (*WriteStreamResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(WriteStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *runtimeSecurityAgentAPIClient) GetSyncState(ctx context.Context, in *GetSyncStateRequest, opts ...grpc.CallOption) (*GetSyncStateResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetSyncStateResponse)
	err := c.cc.Invoke(ctx, RuntimeSecurityAgentAPI_GetSyncState_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeSecurityAgentAPIClient) UpdateSyncState(ctx context.Context, in *UpdateSyncStateRequest, opts ...grpc.CallOption) (*UpdateSyncStateResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateSyncStateResponse)
	err := c.cc.Invoke(ctx, RuntimeSecurityAgentAPI_UpdateSyncState_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeSecurityAgentAPIClient) KubernetesDeltaBatchIngest(ctx context.Context, opts ...grpc.CallOption) (RuntimeSecurityAgentAPI_KubernetesDeltaBatchIngestClient, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	stream, err := c.cc.NewStream(ctx, &RuntimeSecurityAgentAPI_ServiceDesc.Streams[4], RuntimeSecurityAgentAPI_KubernetesDeltaBatchIngest_FullMethodName, cOpts...)
	if err != nil {
		return nil, err
	}
	x := &runtimeSecurityAgentAPIKubernetesDeltaBatchIngestClient{ClientStream: stream}
	return x, nil
}

type RuntimeSecurityAgentAPI_KubernetesDeltaBatchIngestClient interface {
	Send(*KubernetesDeltaBatch) error
	Recv() (*KubernetesDeltaIngestResponse, error)
	grpc.ClientStream
}

type runtimeSecurityAgentAPIKubernetesDeltaBatchIngestClient struct {
	grpc.ClientStream
}

func (x *runtimeSecurityAgentAPIKubernetesDeltaBatchIngestClient) Send(m *KubernetesDeltaBatch) error {
	return x.ClientStream.SendMsg(m)
}

func (x *runtimeSecurityAgentAPIKubernetesDeltaBatchIngestClient) Recv() (*KubernetesDeltaIngestResponse, error) {
	m := new(KubernetesDeltaIngestResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *runtimeSecurityAgentAPIClient) KubernetesDeltaIngest(ctx context.Context, opts ...grpc.CallOption) (RuntimeSecurityAgentAPI_KubernetesDeltaIngestClient, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	stream, err := c.cc.NewStream(ctx, &RuntimeSecurityAgentAPI_ServiceDesc.Streams[5], RuntimeSecurityAgentAPI_KubernetesDeltaIngest_FullMethodName, cOpts...)
	if err != nil {
		return nil, err
	}
	x := &runtimeSecurityAgentAPIKubernetesDeltaIngestClient{ClientStream: stream}
	return x, nil
}

type RuntimeSecurityAgentAPI_KubernetesDeltaIngestClient interface {
	Send(*KubernetesDeltaItem) error
	Recv() (*KubernetesDeltaIngestResponse, error)
	grpc.ClientStream
}

type runtimeSecurityAgentAPIKubernetesDeltaIngestClient struct {
	grpc.ClientStream
}

func (x *runtimeSecurityAgentAPIKubernetesDeltaIngestClient) Send(m *KubernetesDeltaItem) error {
	return x.ClientStream.SendMsg(m)
}

func (x *runtimeSecurityAgentAPIKubernetesDeltaIngestClient) Recv() (*KubernetesDeltaIngestResponse, error) {
	m := new(KubernetesDeltaIngestResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *runtimeSecurityAgentAPIClient) ImageMetadataIngest(ctx context.Context, in *ImageMetadata, opts ...grpc.CallOption) (*ImageMetadataIngestResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ImageMetadataIngestResponse)
	err := c.cc.Invoke(ctx, RuntimeSecurityAgentAPI_ImageMetadataIngest_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeSecurityAgentAPIClient) KubeBenchReportIngest(ctx context.Context, in *KubeBenchReport, opts ...grpc.CallOption) (*KubeBenchReportIngestResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(KubeBenchReportIngestResponse)
	err := c.cc.Invoke(ctx, RuntimeSecurityAgentAPI_KubeBenchReportIngest_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeSecurityAgentAPIClient) KubeLinterReportIngest(ctx context.Context, in *KubeLinterReport, opts ...grpc.CallOption) (*KubeLinterReportIngestResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(KubeLinterReportIngestResponse)
	err := c.cc.Invoke(ctx, RuntimeSecurityAgentAPI_KubeLinterReportIngest_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RuntimeSecurityAgentAPIServer is the server API for RuntimeSecurityAgentAPI service.
// All implementations should embed UnimplementedRuntimeSecurityAgentAPIServer
// for forward compatibility
//
// RuntimeSecurityAgentAPI is used in kvisord. Should be mirrored.
type RuntimeSecurityAgentAPIServer interface {
	GetConfiguration(context.Context, *GetConfigurationRequest) (*GetConfigurationResponse, error)
	EventsWriteStream(RuntimeSecurityAgentAPI_EventsWriteStreamServer) error
	LogsWriteStream(RuntimeSecurityAgentAPI_LogsWriteStreamServer) error
	ContainerStatsWriteStream(RuntimeSecurityAgentAPI_ContainerStatsWriteStreamServer) error
	NetflowWriteStream(RuntimeSecurityAgentAPI_NetflowWriteStreamServer) error
	GetSyncState(context.Context, *GetSyncStateRequest) (*GetSyncStateResponse, error)
	UpdateSyncState(context.Context, *UpdateSyncStateRequest) (*UpdateSyncStateResponse, error)
	KubernetesDeltaBatchIngest(RuntimeSecurityAgentAPI_KubernetesDeltaBatchIngestServer) error
	// Deprecated. Should use KubernetesDeltaBatchIngest.
	KubernetesDeltaIngest(RuntimeSecurityAgentAPI_KubernetesDeltaIngestServer) error
	ImageMetadataIngest(context.Context, *ImageMetadata) (*ImageMetadataIngestResponse, error)
	KubeBenchReportIngest(context.Context, *KubeBenchReport) (*KubeBenchReportIngestResponse, error)
	KubeLinterReportIngest(context.Context, *KubeLinterReport) (*KubeLinterReportIngestResponse, error)
}

// UnimplementedRuntimeSecurityAgentAPIServer should be embedded to have forward compatible implementations.
type UnimplementedRuntimeSecurityAgentAPIServer struct {
}

func (UnimplementedRuntimeSecurityAgentAPIServer) GetConfiguration(context.Context, *GetConfigurationRequest) (*GetConfigurationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfiguration not implemented")
}
func (UnimplementedRuntimeSecurityAgentAPIServer) EventsWriteStream(RuntimeSecurityAgentAPI_EventsWriteStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method EventsWriteStream not implemented")
}
func (UnimplementedRuntimeSecurityAgentAPIServer) LogsWriteStream(RuntimeSecurityAgentAPI_LogsWriteStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method LogsWriteStream not implemented")
}
func (UnimplementedRuntimeSecurityAgentAPIServer) ContainerStatsWriteStream(RuntimeSecurityAgentAPI_ContainerStatsWriteStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method ContainerStatsWriteStream not implemented")
}
func (UnimplementedRuntimeSecurityAgentAPIServer) NetflowWriteStream(RuntimeSecurityAgentAPI_NetflowWriteStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method NetflowWriteStream not implemented")
}
func (UnimplementedRuntimeSecurityAgentAPIServer) GetSyncState(context.Context, *GetSyncStateRequest) (*GetSyncStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSyncState not implemented")
}
func (UnimplementedRuntimeSecurityAgentAPIServer) UpdateSyncState(context.Context, *UpdateSyncStateRequest) (*UpdateSyncStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSyncState not implemented")
}
func (UnimplementedRuntimeSecurityAgentAPIServer) KubernetesDeltaBatchIngest(RuntimeSecurityAgentAPI_KubernetesDeltaBatchIngestServer) error {
	return status.Errorf(codes.Unimplemented, "method KubernetesDeltaBatchIngest not implemented")
}
func (UnimplementedRuntimeSecurityAgentAPIServer) KubernetesDeltaIngest(RuntimeSecurityAgentAPI_KubernetesDeltaIngestServer) error {
	return status.Errorf(codes.Unimplemented, "method KubernetesDeltaIngest not implemented")
}
func (UnimplementedRuntimeSecurityAgentAPIServer) ImageMetadataIngest(context.Context, *ImageMetadata) (*ImageMetadataIngestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImageMetadataIngest not implemented")
}
func (UnimplementedRuntimeSecurityAgentAPIServer) KubeBenchReportIngest(context.Context, *KubeBenchReport) (*KubeBenchReportIngestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KubeBenchReportIngest not implemented")
}
func (UnimplementedRuntimeSecurityAgentAPIServer) KubeLinterReportIngest(context.Context, *KubeLinterReport) (*KubeLinterReportIngestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KubeLinterReportIngest not implemented")
}

// UnsafeRuntimeSecurityAgentAPIServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to RuntimeSecurityAgentAPIServer will
// result in compilation errors.
type UnsafeRuntimeSecurityAgentAPIServer interface {
	mustEmbedUnimplementedRuntimeSecurityAgentAPIServer()
}

func RegisterRuntimeSecurityAgentAPIServer(s grpc.ServiceRegistrar, srv RuntimeSecurityAgentAPIServer) {
	s.RegisterService(&RuntimeSecurityAgentAPI_ServiceDesc, srv)
}

func _RuntimeSecurityAgentAPI_GetConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfigurationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeSecurityAgentAPIServer).GetConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RuntimeSecurityAgentAPI_GetConfiguration_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeSecurityAgentAPIServer).GetConfiguration(ctx, req.(*GetConfigurationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeSecurityAgentAPI_EventsWriteStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RuntimeSecurityAgentAPIServer).EventsWriteStream(&runtimeSecurityAgentAPIEventsWriteStreamServer{ServerStream: stream})
}

type RuntimeSecurityAgentAPI_EventsWriteStreamServer interface {
	SendAndClose(*WriteStreamResponse) error
	Recv() (*Event, error)
	grpc.ServerStream
}

type runtimeSecurityAgentAPIEventsWriteStreamServer struct {
	grpc.ServerStream
}

func (x *runtimeSecurityAgentAPIEventsWriteStreamServer) SendAndClose(m *WriteStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *runtimeSecurityAgentAPIEventsWriteStreamServer) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _RuntimeSecurityAgentAPI_LogsWriteStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RuntimeSecurityAgentAPIServer).LogsWriteStream(&runtimeSecurityAgentAPILogsWriteStreamServer{ServerStream: stream})
}

type RuntimeSecurityAgentAPI_LogsWriteStreamServer interface {
	SendAndClose(*WriteStreamResponse) error
	Recv() (*LogEvent, error)
	grpc.ServerStream
}

type runtimeSecurityAgentAPILogsWriteStreamServer struct {
	grpc.ServerStream
}

func (x *runtimeSecurityAgentAPILogsWriteStreamServer) SendAndClose(m *WriteStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *runtimeSecurityAgentAPILogsWriteStreamServer) Recv() (*LogEvent, error) {
	m := new(LogEvent)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _RuntimeSecurityAgentAPI_ContainerStatsWriteStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RuntimeSecurityAgentAPIServer).ContainerStatsWriteStream(&runtimeSecurityAgentAPIContainerStatsWriteStreamServer{ServerStream: stream})
}

type RuntimeSecurityAgentAPI_ContainerStatsWriteStreamServer interface {
	SendAndClose(*WriteStreamResponse) error
	Recv() (*ContainerStatsBatch, error)
	grpc.ServerStream
}

type runtimeSecurityAgentAPIContainerStatsWriteStreamServer struct {
	grpc.ServerStream
}

func (x *runtimeSecurityAgentAPIContainerStatsWriteStreamServer) SendAndClose(m *WriteStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *runtimeSecurityAgentAPIContainerStatsWriteStreamServer) Recv() (*ContainerStatsBatch, error) {
	m := new(ContainerStatsBatch)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _RuntimeSecurityAgentAPI_NetflowWriteStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RuntimeSecurityAgentAPIServer).NetflowWriteStream(&runtimeSecurityAgentAPINetflowWriteStreamServer{ServerStream: stream})
}

type RuntimeSecurityAgentAPI_NetflowWriteStreamServer interface {
	SendAndClose(*WriteStreamResponse) error
	Recv() (*Netflow, error)
	grpc.ServerStream
}

type runtimeSecurityAgentAPINetflowWriteStreamServer struct {
	grpc.ServerStream
}

func (x *runtimeSecurityAgentAPINetflowWriteStreamServer) SendAndClose(m *WriteStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *runtimeSecurityAgentAPINetflowWriteStreamServer) Recv() (*Netflow, error) {
	m := new(Netflow)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _RuntimeSecurityAgentAPI_GetSyncState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSyncStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeSecurityAgentAPIServer).GetSyncState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RuntimeSecurityAgentAPI_GetSyncState_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeSecurityAgentAPIServer).GetSyncState(ctx, req.(*GetSyncStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeSecurityAgentAPI_UpdateSyncState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSyncStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeSecurityAgentAPIServer).UpdateSyncState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RuntimeSecurityAgentAPI_UpdateSyncState_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeSecurityAgentAPIServer).UpdateSyncState(ctx, req.(*UpdateSyncStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeSecurityAgentAPI_KubernetesDeltaBatchIngest_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RuntimeSecurityAgentAPIServer).KubernetesDeltaBatchIngest(&runtimeSecurityAgentAPIKubernetesDeltaBatchIngestServer{ServerStream: stream})
}

type RuntimeSecurityAgentAPI_KubernetesDeltaBatchIngestServer interface {
	Send(*KubernetesDeltaIngestResponse) error
	Recv() (*KubernetesDeltaBatch, error)
	grpc.ServerStream
}

type runtimeSecurityAgentAPIKubernetesDeltaBatchIngestServer struct {
	grpc.ServerStream
}

func (x *runtimeSecurityAgentAPIKubernetesDeltaBatchIngestServer) Send(m *KubernetesDeltaIngestResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *runtimeSecurityAgentAPIKubernetesDeltaBatchIngestServer) Recv() (*KubernetesDeltaBatch, error) {
	m := new(KubernetesDeltaBatch)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _RuntimeSecurityAgentAPI_KubernetesDeltaIngest_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RuntimeSecurityAgentAPIServer).KubernetesDeltaIngest(&runtimeSecurityAgentAPIKubernetesDeltaIngestServer{ServerStream: stream})
}

type RuntimeSecurityAgentAPI_KubernetesDeltaIngestServer interface {
	Send(*KubernetesDeltaIngestResponse) error
	Recv() (*KubernetesDeltaItem, error)
	grpc.ServerStream
}

type runtimeSecurityAgentAPIKubernetesDeltaIngestServer struct {
	grpc.ServerStream
}

func (x *runtimeSecurityAgentAPIKubernetesDeltaIngestServer) Send(m *KubernetesDeltaIngestResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *runtimeSecurityAgentAPIKubernetesDeltaIngestServer) Recv() (*KubernetesDeltaItem, error) {
	m := new(KubernetesDeltaItem)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _RuntimeSecurityAgentAPI_ImageMetadataIngest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImageMetadata)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeSecurityAgentAPIServer).ImageMetadataIngest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RuntimeSecurityAgentAPI_ImageMetadataIngest_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeSecurityAgentAPIServer).ImageMetadataIngest(ctx, req.(*ImageMetadata))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeSecurityAgentAPI_KubeBenchReportIngest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KubeBenchReport)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeSecurityAgentAPIServer).KubeBenchReportIngest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RuntimeSecurityAgentAPI_KubeBenchReportIngest_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeSecurityAgentAPIServer).KubeBenchReportIngest(ctx, req.(*KubeBenchReport))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeSecurityAgentAPI_KubeLinterReportIngest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KubeLinterReport)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeSecurityAgentAPIServer).KubeLinterReportIngest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RuntimeSecurityAgentAPI_KubeLinterReportIngest_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeSecurityAgentAPIServer).KubeLinterReportIngest(ctx, req.(*KubeLinterReport))
	}
	return interceptor(ctx, in, info, handler)
}

// RuntimeSecurityAgentAPI_ServiceDesc is the grpc.ServiceDesc for RuntimeSecurityAgentAPI service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var RuntimeSecurityAgentAPI_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "runtime.v1.RuntimeSecurityAgentAPI",
	HandlerType: (*RuntimeSecurityAgentAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetConfiguration",
			Handler:    _RuntimeSecurityAgentAPI_GetConfiguration_Handler,
		},
		{
			MethodName: "GetSyncState",
			Handler:    _RuntimeSecurityAgentAPI_GetSyncState_Handler,
		},
		{
			MethodName: "UpdateSyncState",
			Handler:    _RuntimeSecurityAgentAPI_UpdateSyncState_Handler,
		},
		{
			MethodName: "ImageMetadataIngest",
			Handler:    _RuntimeSecurityAgentAPI_ImageMetadataIngest_Handler,
		},
		{
			MethodName: "KubeBenchReportIngest",
			Handler:    _RuntimeSecurityAgentAPI_KubeBenchReportIngest_Handler,
		},
		{
			MethodName: "KubeLinterReportIngest",
			Handler:    _RuntimeSecurityAgentAPI_KubeLinterReportIngest_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "EventsWriteStream",
			Handler:       _RuntimeSecurityAgentAPI_EventsWriteStream_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "LogsWriteStream",
			Handler:       _RuntimeSecurityAgentAPI_LogsWriteStream_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "ContainerStatsWriteStream",
			Handler:       _RuntimeSecurityAgentAPI_ContainerStatsWriteStream_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "NetflowWriteStream",
			Handler:       _RuntimeSecurityAgentAPI_NetflowWriteStream_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "KubernetesDeltaBatchIngest",
			Handler:       _RuntimeSecurityAgentAPI_KubernetesDeltaBatchIngest_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "KubernetesDeltaIngest",
			Handler:       _RuntimeSecurityAgentAPI_KubernetesDeltaIngest_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "api/v1/runtime/runtime_agent_api.proto",
}
