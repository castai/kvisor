// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.19.4
// source: api/v1/runtime/runtime_agent_api.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventType int32

const (
	EventType_UNKNOWN                 EventType = 0
	EventType_EVENT_EXEC              EventType = 1
	EventType_EVENT_DNS               EventType = 2
	EventType_EVENT_TCP_CONNECT       EventType = 3
	EventType_EVENT_TCP_CONNECT_ERROR EventType = 4
	EventType_EVENT_TCP_LISTEN        EventType = 5
	EventType_EVENT_FILE_CHANGE       EventType = 6
	EventType_EVENT_PROCESS_OOM       EventType = 7
	EventType_EVENT_MAGIC_WRITE       EventType = 8
	EventType_EVENT_SIGNATURE         EventType = 9
	EventType_EVENT_ANY               EventType = 999
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0:   "UNKNOWN",
		1:   "EVENT_EXEC",
		2:   "EVENT_DNS",
		3:   "EVENT_TCP_CONNECT",
		4:   "EVENT_TCP_CONNECT_ERROR",
		5:   "EVENT_TCP_LISTEN",
		6:   "EVENT_FILE_CHANGE",
		7:   "EVENT_PROCESS_OOM",
		8:   "EVENT_MAGIC_WRITE",
		9:   "EVENT_SIGNATURE",
		999: "EVENT_ANY",
	}
	EventType_value = map[string]int32{
		"UNKNOWN":                 0,
		"EVENT_EXEC":              1,
		"EVENT_DNS":               2,
		"EVENT_TCP_CONNECT":       3,
		"EVENT_TCP_CONNECT_ERROR": 4,
		"EVENT_TCP_LISTEN":        5,
		"EVENT_FILE_CHANGE":       6,
		"EVENT_PROCESS_OOM":       7,
		"EVENT_MAGIC_WRITE":       8,
		"EVENT_SIGNATURE":         9,
		"EVENT_ANY":               999,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_runtime_runtime_agent_api_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_api_v1_runtime_runtime_agent_api_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{0}
}

type KubernetesDeltaItemEvent int32

const (
	KubernetesDeltaItemEvent_DELTA_ADD    KubernetesDeltaItemEvent = 0
	KubernetesDeltaItemEvent_DELTA_UPDATE KubernetesDeltaItemEvent = 1
	KubernetesDeltaItemEvent_DELTA_REMOVE KubernetesDeltaItemEvent = 2
)

// Enum value maps for KubernetesDeltaItemEvent.
var (
	KubernetesDeltaItemEvent_name = map[int32]string{
		0: "DELTA_ADD",
		1: "DELTA_UPDATE",
		2: "DELTA_REMOVE",
	}
	KubernetesDeltaItemEvent_value = map[string]int32{
		"DELTA_ADD":    0,
		"DELTA_UPDATE": 1,
		"DELTA_REMOVE": 2,
	}
)

func (x KubernetesDeltaItemEvent) Enum() *KubernetesDeltaItemEvent {
	p := new(KubernetesDeltaItemEvent)
	*p = x
	return p
}

func (x KubernetesDeltaItemEvent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KubernetesDeltaItemEvent) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_runtime_runtime_agent_api_proto_enumTypes[1].Descriptor()
}

func (KubernetesDeltaItemEvent) Type() protoreflect.EnumType {
	return &file_api_v1_runtime_runtime_agent_api_proto_enumTypes[1]
}

func (x KubernetesDeltaItemEvent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KubernetesDeltaItemEvent.Descriptor instead.
func (KubernetesDeltaItemEvent) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{1}
}

type ImageScanStatus int32

const (
	ImageScanStatus_IMAGE_SCAN_STATUS_UNKNOWN    ImageScanStatus = 0
	ImageScanStatus_IMAGE_SCAN_STATUS_SCANNED    ImageScanStatus = 1
	ImageScanStatus_IMAGE_SCAN_STATUS_PENDING    ImageScanStatus = 2
	ImageScanStatus_IMAGE_SCAN_STATUS_SCAN_ERROR ImageScanStatus = 3
)

// Enum value maps for ImageScanStatus.
var (
	ImageScanStatus_name = map[int32]string{
		0: "IMAGE_SCAN_STATUS_UNKNOWN",
		1: "IMAGE_SCAN_STATUS_SCANNED",
		2: "IMAGE_SCAN_STATUS_PENDING",
		3: "IMAGE_SCAN_STATUS_SCAN_ERROR",
	}
	ImageScanStatus_value = map[string]int32{
		"IMAGE_SCAN_STATUS_UNKNOWN":    0,
		"IMAGE_SCAN_STATUS_SCANNED":    1,
		"IMAGE_SCAN_STATUS_PENDING":    2,
		"IMAGE_SCAN_STATUS_SCAN_ERROR": 3,
	}
)

func (x ImageScanStatus) Enum() *ImageScanStatus {
	p := new(ImageScanStatus)
	*p = x
	return p
}

func (x ImageScanStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImageScanStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_runtime_runtime_agent_api_proto_enumTypes[2].Descriptor()
}

func (ImageScanStatus) Type() protoreflect.EnumType {
	return &file_api_v1_runtime_runtime_agent_api_proto_enumTypes[2]
}

func (x ImageScanStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImageScanStatus.Descriptor instead.
func (ImageScanStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{2}
}

type GetConfigurationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to CurrentConfig:
	//
	//	*GetConfigurationRequest_Controller
	//	*GetConfigurationRequest_Agent
	CurrentConfig isGetConfigurationRequest_CurrentConfig `protobuf_oneof:"current_config"`
}

func (x *GetConfigurationRequest) Reset() {
	*x = GetConfigurationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigurationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigurationRequest) ProtoMessage() {}

func (x *GetConfigurationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigurationRequest.ProtoReflect.Descriptor instead.
func (*GetConfigurationRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{0}
}

func (m *GetConfigurationRequest) GetCurrentConfig() isGetConfigurationRequest_CurrentConfig {
	if m != nil {
		return m.CurrentConfig
	}
	return nil
}

func (x *GetConfigurationRequest) GetController() *ControllerConfig {
	if x, ok := x.GetCurrentConfig().(*GetConfigurationRequest_Controller); ok {
		return x.Controller
	}
	return nil
}

func (x *GetConfigurationRequest) GetAgent() *AgentConfig {
	if x, ok := x.GetCurrentConfig().(*GetConfigurationRequest_Agent); ok {
		return x.Agent
	}
	return nil
}

type isGetConfigurationRequest_CurrentConfig interface {
	isGetConfigurationRequest_CurrentConfig()
}

type GetConfigurationRequest_Controller struct {
	Controller *ControllerConfig `protobuf:"bytes,1,opt,name=controller,proto3,oneof"`
}

type GetConfigurationRequest_Agent struct {
	Agent *AgentConfig `protobuf:"bytes,2,opt,name=agent,proto3,oneof"`
}

func (*GetConfigurationRequest_Controller) isGetConfigurationRequest_CurrentConfig() {}

func (*GetConfigurationRequest_Agent) isGetConfigurationRequest_CurrentConfig() {}

type GetConfigurationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *Configuration `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *GetConfigurationResponse) Reset() {
	*x = GetConfigurationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigurationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigurationResponse) ProtoMessage() {}

func (x *GetConfigurationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigurationResponse.ProtoReflect.Descriptor instead.
func (*GetConfigurationResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{1}
}

func (x *GetConfigurationResponse) GetConfig() *Configuration {
	if x != nil {
		return x.Config
	}
	return nil
}

type Configuration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Configuration) Reset() {
	*x = Configuration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Configuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Configuration) ProtoMessage() {}

func (x *Configuration) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Configuration.ProtoReflect.Descriptor instead.
func (*Configuration) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{2}
}

type ControllerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogLevel              string                  `protobuf:"bytes,1,opt,name=log_level,json=logLevel,proto3" json:"log_level,omitempty"`
	LogRateInterval       string                  `protobuf:"bytes,2,opt,name=log_rate_interval,json=logRateInterval,proto3" json:"log_rate_interval,omitempty"`
	LogRateBurst          int32                   `protobuf:"varint,3,opt,name=log_rate_burst,json=logRateBurst,proto3" json:"log_rate_burst,omitempty"`
	Version               string                  `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	ChartVersion          string                  `protobuf:"bytes,5,opt,name=chart_version,json=chartVersion,proto3" json:"chart_version,omitempty"`
	PodNamespace          string                  `protobuf:"bytes,6,opt,name=pod_namespace,json=podNamespace,proto3" json:"pod_namespace,omitempty"`
	PodName               string                  `protobuf:"bytes,7,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	HttpListenPort        int32                   `protobuf:"varint,8,opt,name=http_listen_port,json=httpListenPort,proto3" json:"http_listen_port,omitempty"`
	MetricsHttpListenPort int32                   `protobuf:"varint,9,opt,name=metrics_http_listen_port,json=metricsHttpListenPort,proto3" json:"metrics_http_listen_port,omitempty"`
	PyroscopeAddr         string                  `protobuf:"bytes,10,opt,name=pyroscope_addr,json=pyroscopeAddr,proto3" json:"pyroscope_addr,omitempty"`
	CastaiController      *CastaiControllerConfig `protobuf:"bytes,11,opt,name=castai_controller,json=castaiController,proto3" json:"castai_controller,omitempty"`
	CastaiEnv             *CastaiConfig           `protobuf:"bytes,12,opt,name=castai_env,json=castaiEnv,proto3" json:"castai_env,omitempty"`
	ImageScan             *ImageScanConfig        `protobuf:"bytes,13,opt,name=image_scan,json=imageScan,proto3" json:"image_scan,omitempty"`
	Linter                *LinterConfig           `protobuf:"bytes,14,opt,name=linter,proto3" json:"linter,omitempty"`
	KubeBench             *KubeBenchConfig        `protobuf:"bytes,15,opt,name=kube_bench,json=kubeBench,proto3" json:"kube_bench,omitempty"`
	Delta                 *DeltaConfig            `protobuf:"bytes,16,opt,name=delta,proto3" json:"delta,omitempty"`
	JobsCleanup           *JobsCleanupConfig      `protobuf:"bytes,17,opt,name=jobs_cleanup,json=jobsCleanup,proto3" json:"jobs_cleanup,omitempty"`
	AgentConfig           *ControllerAgentConfig  `protobuf:"bytes,18,opt,name=agent_config,json=agentConfig,proto3" json:"agent_config,omitempty"`
}

func (x *ControllerConfig) Reset() {
	*x = ControllerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControllerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControllerConfig) ProtoMessage() {}

func (x *ControllerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControllerConfig.ProtoReflect.Descriptor instead.
func (*ControllerConfig) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{3}
}

func (x *ControllerConfig) GetLogLevel() string {
	if x != nil {
		return x.LogLevel
	}
	return ""
}

func (x *ControllerConfig) GetLogRateInterval() string {
	if x != nil {
		return x.LogRateInterval
	}
	return ""
}

func (x *ControllerConfig) GetLogRateBurst() int32 {
	if x != nil {
		return x.LogRateBurst
	}
	return 0
}

func (x *ControllerConfig) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ControllerConfig) GetChartVersion() string {
	if x != nil {
		return x.ChartVersion
	}
	return ""
}

func (x *ControllerConfig) GetPodNamespace() string {
	if x != nil {
		return x.PodNamespace
	}
	return ""
}

func (x *ControllerConfig) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *ControllerConfig) GetHttpListenPort() int32 {
	if x != nil {
		return x.HttpListenPort
	}
	return 0
}

func (x *ControllerConfig) GetMetricsHttpListenPort() int32 {
	if x != nil {
		return x.MetricsHttpListenPort
	}
	return 0
}

func (x *ControllerConfig) GetPyroscopeAddr() string {
	if x != nil {
		return x.PyroscopeAddr
	}
	return ""
}

func (x *ControllerConfig) GetCastaiController() *CastaiControllerConfig {
	if x != nil {
		return x.CastaiController
	}
	return nil
}

func (x *ControllerConfig) GetCastaiEnv() *CastaiConfig {
	if x != nil {
		return x.CastaiEnv
	}
	return nil
}

func (x *ControllerConfig) GetImageScan() *ImageScanConfig {
	if x != nil {
		return x.ImageScan
	}
	return nil
}

func (x *ControllerConfig) GetLinter() *LinterConfig {
	if x != nil {
		return x.Linter
	}
	return nil
}

func (x *ControllerConfig) GetKubeBench() *KubeBenchConfig {
	if x != nil {
		return x.KubeBench
	}
	return nil
}

func (x *ControllerConfig) GetDelta() *DeltaConfig {
	if x != nil {
		return x.Delta
	}
	return nil
}

func (x *ControllerConfig) GetJobsCleanup() *JobsCleanupConfig {
	if x != nil {
		return x.JobsCleanup
	}
	return nil
}

func (x *ControllerConfig) GetAgentConfig() *ControllerAgentConfig {
	if x != nil {
		return x.AgentConfig
	}
	return nil
}

type CastaiControllerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteConfigSyncDuration string `protobuf:"bytes,1,opt,name=remote_config_sync_duration,json=remoteConfigSyncDuration,proto3" json:"remote_config_sync_duration,omitempty"`
}

func (x *CastaiControllerConfig) Reset() {
	*x = CastaiControllerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CastaiControllerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CastaiControllerConfig) ProtoMessage() {}

func (x *CastaiControllerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CastaiControllerConfig.ProtoReflect.Descriptor instead.
func (*CastaiControllerConfig) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{4}
}

func (x *CastaiControllerConfig) GetRemoteConfigSyncDuration() string {
	if x != nil {
		return x.RemoteConfigSyncDuration
	}
	return ""
}

type ImageScanConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled                   bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	CastaiSecretRefName       string `protobuf:"bytes,2,opt,name=castai_secret_ref_name,json=castaiSecretRefName,proto3" json:"castai_secret_ref_name,omitempty"`
	ScanInterval              string `protobuf:"bytes,3,opt,name=scan_interval,json=scanInterval,proto3" json:"scan_interval,omitempty"`
	ScanTimeout               string `protobuf:"bytes,4,opt,name=scan_timeout,json=scanTimeout,proto3" json:"scan_timeout,omitempty"`
	MaxConcurrentScans        int64  `protobuf:"varint,5,opt,name=max_concurrent_scans,json=maxConcurrentScans,proto3" json:"max_concurrent_scans,omitempty"`
	ScanJobImagePullPolicy    string `protobuf:"bytes,6,opt,name=scan_job_image_pull_policy,json=scanJobImagePullPolicy,proto3" json:"scan_job_image_pull_policy,omitempty"`
	Mode                      string `protobuf:"bytes,7,opt,name=mode,proto3" json:"mode,omitempty"`
	CpuRequest                string `protobuf:"bytes,8,opt,name=cpu_request,json=cpuRequest,proto3" json:"cpu_request,omitempty"`
	CpuLimit                  string `protobuf:"bytes,9,opt,name=cpu_limit,json=cpuLimit,proto3" json:"cpu_limit,omitempty"`
	MemoryRequest             string `protobuf:"bytes,10,opt,name=memory_request,json=memoryRequest,proto3" json:"memory_request,omitempty"`
	MemoryLimit               string `protobuf:"bytes,11,opt,name=memory_limit,json=memoryLimit,proto3" json:"memory_limit,omitempty"`
	ProfileEnabled            bool   `protobuf:"varint,12,opt,name=profile_enabled,json=profileEnabled,proto3" json:"profile_enabled,omitempty"`
	PhlareEnabled             bool   `protobuf:"varint,13,opt,name=phlare_enabled,json=phlareEnabled,proto3" json:"phlare_enabled,omitempty"`
	PrivateRegistryPullSecret string `protobuf:"bytes,14,opt,name=private_registry_pull_secret,json=privateRegistryPullSecret,proto3" json:"private_registry_pull_secret,omitempty"`
	ServiceAccount            string `protobuf:"bytes,15,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
	InitDelay                 string `protobuf:"bytes,16,opt,name=init_delay,json=initDelay,proto3" json:"init_delay,omitempty"`
	ImageScanBlobsCacheUrl    string `protobuf:"bytes,17,opt,name=image_scan_blobs_cache_url,json=imageScanBlobsCacheUrl,proto3" json:"image_scan_blobs_cache_url,omitempty"`
}

func (x *ImageScanConfig) Reset() {
	*x = ImageScanConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageScanConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageScanConfig) ProtoMessage() {}

func (x *ImageScanConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageScanConfig.ProtoReflect.Descriptor instead.
func (*ImageScanConfig) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{5}
}

func (x *ImageScanConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ImageScanConfig) GetCastaiSecretRefName() string {
	if x != nil {
		return x.CastaiSecretRefName
	}
	return ""
}

func (x *ImageScanConfig) GetScanInterval() string {
	if x != nil {
		return x.ScanInterval
	}
	return ""
}

func (x *ImageScanConfig) GetScanTimeout() string {
	if x != nil {
		return x.ScanTimeout
	}
	return ""
}

func (x *ImageScanConfig) GetMaxConcurrentScans() int64 {
	if x != nil {
		return x.MaxConcurrentScans
	}
	return 0
}

func (x *ImageScanConfig) GetScanJobImagePullPolicy() string {
	if x != nil {
		return x.ScanJobImagePullPolicy
	}
	return ""
}

func (x *ImageScanConfig) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *ImageScanConfig) GetCpuRequest() string {
	if x != nil {
		return x.CpuRequest
	}
	return ""
}

func (x *ImageScanConfig) GetCpuLimit() string {
	if x != nil {
		return x.CpuLimit
	}
	return ""
}

func (x *ImageScanConfig) GetMemoryRequest() string {
	if x != nil {
		return x.MemoryRequest
	}
	return ""
}

func (x *ImageScanConfig) GetMemoryLimit() string {
	if x != nil {
		return x.MemoryLimit
	}
	return ""
}

func (x *ImageScanConfig) GetProfileEnabled() bool {
	if x != nil {
		return x.ProfileEnabled
	}
	return false
}

func (x *ImageScanConfig) GetPhlareEnabled() bool {
	if x != nil {
		return x.PhlareEnabled
	}
	return false
}

func (x *ImageScanConfig) GetPrivateRegistryPullSecret() string {
	if x != nil {
		return x.PrivateRegistryPullSecret
	}
	return ""
}

func (x *ImageScanConfig) GetServiceAccount() string {
	if x != nil {
		return x.ServiceAccount
	}
	return ""
}

func (x *ImageScanConfig) GetInitDelay() string {
	if x != nil {
		return x.InitDelay
	}
	return ""
}

func (x *ImageScanConfig) GetImageScanBlobsCacheUrl() string {
	if x != nil {
		return x.ImageScanBlobsCacheUrl
	}
	return ""
}

type LinterConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled      bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	ScanInterval string `protobuf:"bytes,2,opt,name=scan_interval,json=scanInterval,proto3" json:"scan_interval,omitempty"`
	InitDelay    string `protobuf:"bytes,3,opt,name=init_delay,json=initDelay,proto3" json:"init_delay,omitempty"`
}

func (x *LinterConfig) Reset() {
	*x = LinterConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinterConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinterConfig) ProtoMessage() {}

func (x *LinterConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinterConfig.ProtoReflect.Descriptor instead.
func (*LinterConfig) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{6}
}

func (x *LinterConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *LinterConfig) GetScanInterval() string {
	if x != nil {
		return x.ScanInterval
	}
	return ""
}

func (x *LinterConfig) GetInitDelay() string {
	if x != nil {
		return x.InitDelay
	}
	return ""
}

type KubeBenchConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled            bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Force              bool   `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	ScanInterval       string `protobuf:"bytes,3,opt,name=scan_interval,json=scanInterval,proto3" json:"scan_interval,omitempty"`
	JobImagePullPolicy string `protobuf:"bytes,4,opt,name=job_image_pull_policy,json=jobImagePullPolicy,proto3" json:"job_image_pull_policy,omitempty"`
	CloudProvider      string `protobuf:"bytes,5,opt,name=cloud_provider,json=cloudProvider,proto3" json:"cloud_provider,omitempty"`
	JobNamespace       string `protobuf:"bytes,6,opt,name=job_namespace,json=jobNamespace,proto3" json:"job_namespace,omitempty"`
}

func (x *KubeBenchConfig) Reset() {
	*x = KubeBenchConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubeBenchConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubeBenchConfig) ProtoMessage() {}

func (x *KubeBenchConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubeBenchConfig.ProtoReflect.Descriptor instead.
func (*KubeBenchConfig) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{7}
}

func (x *KubeBenchConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *KubeBenchConfig) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *KubeBenchConfig) GetScanInterval() string {
	if x != nil {
		return x.ScanInterval
	}
	return ""
}

func (x *KubeBenchConfig) GetJobImagePullPolicy() string {
	if x != nil {
		return x.JobImagePullPolicy
	}
	return ""
}

func (x *KubeBenchConfig) GetCloudProvider() string {
	if x != nil {
		return x.CloudProvider
	}
	return ""
}

func (x *KubeBenchConfig) GetJobNamespace() string {
	if x != nil {
		return x.JobNamespace
	}
	return ""
}

type DeltaConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled        bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Interval       string `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
	InitialDeltay  string `protobuf:"bytes,3,opt,name=initial_deltay,json=initialDeltay,proto3" json:"initial_deltay,omitempty"`
	SendTimeout    string `protobuf:"bytes,4,opt,name=send_timeout,json=sendTimeout,proto3" json:"send_timeout,omitempty"`
	UseCompression bool   `protobuf:"varint,5,opt,name=use_compression,json=useCompression,proto3" json:"use_compression,omitempty"`
}

func (x *DeltaConfig) Reset() {
	*x = DeltaConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeltaConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeltaConfig) ProtoMessage() {}

func (x *DeltaConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeltaConfig.ProtoReflect.Descriptor instead.
func (*DeltaConfig) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{8}
}

func (x *DeltaConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *DeltaConfig) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *DeltaConfig) GetInitialDeltay() string {
	if x != nil {
		return x.InitialDeltay
	}
	return ""
}

func (x *DeltaConfig) GetSendTimeout() string {
	if x != nil {
		return x.SendTimeout
	}
	return ""
}

func (x *DeltaConfig) GetUseCompression() bool {
	if x != nil {
		return x.UseCompression
	}
	return false
}

type JobsCleanupConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CleanupInterval string `protobuf:"bytes,1,opt,name=cleanup_interval,json=cleanupInterval,proto3" json:"cleanup_interval,omitempty"`
	CleanupJobAge   string `protobuf:"bytes,2,opt,name=cleanup_job_age,json=cleanupJobAge,proto3" json:"cleanup_job_age,omitempty"`
	Namespace       string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *JobsCleanupConfig) Reset() {
	*x = JobsCleanupConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobsCleanupConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobsCleanupConfig) ProtoMessage() {}

func (x *JobsCleanupConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobsCleanupConfig.ProtoReflect.Descriptor instead.
func (*JobsCleanupConfig) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{9}
}

func (x *JobsCleanupConfig) GetCleanupInterval() string {
	if x != nil {
		return x.CleanupInterval
	}
	return ""
}

func (x *JobsCleanupConfig) GetCleanupJobAge() string {
	if x != nil {
		return x.CleanupJobAge
	}
	return ""
}

func (x *JobsCleanupConfig) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type AgentConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogLevel                 string                      `protobuf:"bytes,1,opt,name=log_level,json=logLevel,proto3" json:"log_level,omitempty"`
	LogRateInterval          string                      `protobuf:"bytes,2,opt,name=log_rate_interval,json=logRateInterval,proto3" json:"log_rate_interval,omitempty"`
	LogRateBurst             int32                       `protobuf:"varint,3,opt,name=log_rate_burst,json=logRateBurst,proto3" json:"log_rate_burst,omitempty"`
	SendLogsLevel            string                      `protobuf:"bytes,4,opt,name=send_logs_level,json=sendLogsLevel,proto3" json:"send_logs_level,omitempty"`
	Version                  string                      `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	BtfPath                  string                      `protobuf:"bytes,6,opt,name=btf_path,json=btfPath,proto3" json:"btf_path,omitempty"`
	PyroscopeAddr            string                      `protobuf:"bytes,7,opt,name=pyroscope_addr,json=pyroscopeAddr,proto3" json:"pyroscope_addr,omitempty"`
	ContainerdSockPath       string                      `protobuf:"bytes,9,opt,name=containerd_sock_path,json=containerdSockPath,proto3" json:"containerd_sock_path,omitempty"`
	HostCgroupsDir           string                      `protobuf:"bytes,10,opt,name=host_cgroups_dir,json=hostCgroupsDir,proto3" json:"host_cgroups_dir,omitempty"`
	MetricsHttpListenPort    int32                       `protobuf:"varint,12,opt,name=metrics_http_listen_port,json=metricsHttpListenPort,proto3" json:"metrics_http_listen_port,omitempty"`
	State                    *AgentStateControllerConfig `protobuf:"bytes,13,opt,name=state,proto3" json:"state,omitempty"`
	EbpfEventsPerCpuBuffer   int32                       `protobuf:"varint,14,opt,name=ebpf_events_per_cpu_buffer,json=ebpfEventsPerCpuBuffer,proto3" json:"ebpf_events_per_cpu_buffer,omitempty"`
	EbpfEventsOutputChanSize int32                       `protobuf:"varint,15,opt,name=ebpf_events_output_chan_size,json=ebpfEventsOutputChanSize,proto3" json:"ebpf_events_output_chan_size,omitempty"`
	MutedNamespaces          []string                    `protobuf:"bytes,16,rep,name=muted_namespaces,json=mutedNamespaces,proto3" json:"muted_namespaces,omitempty"`
	SignatureEngineConfig    *SignatureEngineConfig      `protobuf:"bytes,17,opt,name=signature_engine_config,json=signatureEngineConfig,proto3" json:"signature_engine_config,omitempty"`
	CastaiEnv                *CastaiConfig               `protobuf:"bytes,18,opt,name=castai_env,json=castaiEnv,proto3" json:"castai_env,omitempty"`
	EnricherConfig           *EnricherConfig             `protobuf:"bytes,19,opt,name=enricher_config,json=enricherConfig,proto3" json:"enricher_config,omitempty"`
	Netflow                  *NetflowConfig              `protobuf:"bytes,20,opt,name=netflow,proto3" json:"netflow,omitempty"`
	EbpfEventsEnabled        bool                        `protobuf:"varint,21,opt,name=ebpf_events_enabled,json=ebpfEventsEnabled,proto3" json:"ebpf_events_enabled,omitempty"`
	ContainerStatsEnabled    bool                        `protobuf:"varint,22,opt,name=container_stats_enabled,json=containerStatsEnabled,proto3" json:"container_stats_enabled,omitempty"`
}

func (x *AgentConfig) Reset() {
	*x = AgentConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentConfig) ProtoMessage() {}

func (x *AgentConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentConfig.ProtoReflect.Descriptor instead.
func (*AgentConfig) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{10}
}

func (x *AgentConfig) GetLogLevel() string {
	if x != nil {
		return x.LogLevel
	}
	return ""
}

func (x *AgentConfig) GetLogRateInterval() string {
	if x != nil {
		return x.LogRateInterval
	}
	return ""
}

func (x *AgentConfig) GetLogRateBurst() int32 {
	if x != nil {
		return x.LogRateBurst
	}
	return 0
}

func (x *AgentConfig) GetSendLogsLevel() string {
	if x != nil {
		return x.SendLogsLevel
	}
	return ""
}

func (x *AgentConfig) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AgentConfig) GetBtfPath() string {
	if x != nil {
		return x.BtfPath
	}
	return ""
}

func (x *AgentConfig) GetPyroscopeAddr() string {
	if x != nil {
		return x.PyroscopeAddr
	}
	return ""
}

func (x *AgentConfig) GetContainerdSockPath() string {
	if x != nil {
		return x.ContainerdSockPath
	}
	return ""
}

func (x *AgentConfig) GetHostCgroupsDir() string {
	if x != nil {
		return x.HostCgroupsDir
	}
	return ""
}

func (x *AgentConfig) GetMetricsHttpListenPort() int32 {
	if x != nil {
		return x.MetricsHttpListenPort
	}
	return 0
}

func (x *AgentConfig) GetState() *AgentStateControllerConfig {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *AgentConfig) GetEbpfEventsPerCpuBuffer() int32 {
	if x != nil {
		return x.EbpfEventsPerCpuBuffer
	}
	return 0
}

func (x *AgentConfig) GetEbpfEventsOutputChanSize() int32 {
	if x != nil {
		return x.EbpfEventsOutputChanSize
	}
	return 0
}

func (x *AgentConfig) GetMutedNamespaces() []string {
	if x != nil {
		return x.MutedNamespaces
	}
	return nil
}

func (x *AgentConfig) GetSignatureEngineConfig() *SignatureEngineConfig {
	if x != nil {
		return x.SignatureEngineConfig
	}
	return nil
}

func (x *AgentConfig) GetCastaiEnv() *CastaiConfig {
	if x != nil {
		return x.CastaiEnv
	}
	return nil
}

func (x *AgentConfig) GetEnricherConfig() *EnricherConfig {
	if x != nil {
		return x.EnricherConfig
	}
	return nil
}

func (x *AgentConfig) GetNetflow() *NetflowConfig {
	if x != nil {
		return x.Netflow
	}
	return nil
}

func (x *AgentConfig) GetEbpfEventsEnabled() bool {
	if x != nil {
		return x.EbpfEventsEnabled
	}
	return false
}

func (x *AgentConfig) GetContainerStatsEnabled() bool {
	if x != nil {
		return x.ContainerStatsEnabled
	}
	return false
}

type ControllerAgentConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *ControllerAgentConfig) Reset() {
	*x = ControllerAgentConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControllerAgentConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControllerAgentConfig) ProtoMessage() {}

func (x *ControllerAgentConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControllerAgentConfig.ProtoReflect.Descriptor instead.
func (*ControllerAgentConfig) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{11}
}

func (x *ControllerAgentConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type AgentStateControllerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventsSinkQueueSize          int32  `protobuf:"varint,1,opt,name=events_sink_queue_size,json=eventsSinkQueueSize,proto3" json:"events_sink_queue_size,omitempty"`
	ContainerStatsScrapeInterval string `protobuf:"bytes,2,opt,name=container_stats_scrape_interval,json=containerStatsScrapeInterval,proto3" json:"container_stats_scrape_interval,omitempty"`
}

func (x *AgentStateControllerConfig) Reset() {
	*x = AgentStateControllerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentStateControllerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentStateControllerConfig) ProtoMessage() {}

func (x *AgentStateControllerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentStateControllerConfig.ProtoReflect.Descriptor instead.
func (*AgentStateControllerConfig) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{12}
}

func (x *AgentStateControllerConfig) GetEventsSinkQueueSize() int32 {
	if x != nil {
		return x.EventsSinkQueueSize
	}
	return 0
}

func (x *AgentStateControllerConfig) GetContainerStatsScrapeInterval() string {
	if x != nil {
		return x.ContainerStatsScrapeInterval
	}
	return ""
}

type SOCKS5DetectedSignatureConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheSize uint32 `protobuf:"varint,1,opt,name=cache_size,json=cacheSize,proto3" json:"cache_size,omitempty"`
}

func (x *SOCKS5DetectedSignatureConfig) Reset() {
	*x = SOCKS5DetectedSignatureConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SOCKS5DetectedSignatureConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SOCKS5DetectedSignatureConfig) ProtoMessage() {}

func (x *SOCKS5DetectedSignatureConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SOCKS5DetectedSignatureConfig.ProtoReflect.Descriptor instead.
func (*SOCKS5DetectedSignatureConfig) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{13}
}

func (x *SOCKS5DetectedSignatureConfig) GetCacheSize() uint32 {
	if x != nil {
		return x.CacheSize
	}
	return 0
}

type SignatureEngineConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputChanSize                  int32                          `protobuf:"varint,1,opt,name=input_chan_size,json=inputChanSize,proto3" json:"input_chan_size,omitempty"`
	OutputChanSize                 int32                          `protobuf:"varint,2,opt,name=output_chan_size,json=outputChanSize,proto3" json:"output_chan_size,omitempty"`
	TtyDetectedSignatureEnabled    bool                           `protobuf:"varint,3,opt,name=tty_detected_signature_enabled,json=ttyDetectedSignatureEnabled,proto3" json:"tty_detected_signature_enabled,omitempty"`
	Socks5DetectedSignatureEnabled bool                           `protobuf:"varint,4,opt,name=socks5_detected_signature_enabled,json=socks5DetectedSignatureEnabled,proto3" json:"socks5_detected_signature_enabled,omitempty"`
	Socks5DetectedSignatureConfig  *SOCKS5DetectedSignatureConfig `protobuf:"bytes,5,opt,name=socks5_detected_signature_config,json=socks5DetectedSignatureConfig,proto3" json:"socks5_detected_signature_config,omitempty"`
}

func (x *SignatureEngineConfig) Reset() {
	*x = SignatureEngineConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignatureEngineConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureEngineConfig) ProtoMessage() {}

func (x *SignatureEngineConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureEngineConfig.ProtoReflect.Descriptor instead.
func (*SignatureEngineConfig) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{14}
}

func (x *SignatureEngineConfig) GetInputChanSize() int32 {
	if x != nil {
		return x.InputChanSize
	}
	return 0
}

func (x *SignatureEngineConfig) GetOutputChanSize() int32 {
	if x != nil {
		return x.OutputChanSize
	}
	return 0
}

func (x *SignatureEngineConfig) GetTtyDetectedSignatureEnabled() bool {
	if x != nil {
		return x.TtyDetectedSignatureEnabled
	}
	return false
}

func (x *SignatureEngineConfig) GetSocks5DetectedSignatureEnabled() bool {
	if x != nil {
		return x.Socks5DetectedSignatureEnabled
	}
	return false
}

func (x *SignatureEngineConfig) GetSocks5DetectedSignatureConfig() *SOCKS5DetectedSignatureConfig {
	if x != nil {
		return x.Socks5DetectedSignatureConfig
	}
	return nil
}

type CastaiConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterId   string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	ApiGrpcAddr string `protobuf:"bytes,2,opt,name=api_grpc_addr,json=apiGrpcAddr,proto3" json:"api_grpc_addr,omitempty"`
	Insecure    bool   `protobuf:"varint,3,opt,name=insecure,proto3" json:"insecure,omitempty"`
}

func (x *CastaiConfig) Reset() {
	*x = CastaiConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CastaiConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CastaiConfig) ProtoMessage() {}

func (x *CastaiConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CastaiConfig.ProtoReflect.Descriptor instead.
func (*CastaiConfig) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{15}
}

func (x *CastaiConfig) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *CastaiConfig) GetApiGrpcAddr() string {
	if x != nil {
		return x.ApiGrpcAddr
	}
	return ""
}

func (x *CastaiConfig) GetInsecure() bool {
	if x != nil {
		return x.Insecure
	}
	return false
}

type EnricherConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnableFileHashEnricher bool   `protobuf:"varint,1,opt,name=enable_file_hash_enricher,json=enableFileHashEnricher,proto3" json:"enable_file_hash_enricher,omitempty"`
	SensitiveValuesRegex   string `protobuf:"bytes,2,opt,name=sensitive_values_regex,json=sensitiveValuesRegex,proto3" json:"sensitive_values_regex,omitempty"`
}

func (x *EnricherConfig) Reset() {
	*x = EnricherConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnricherConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnricherConfig) ProtoMessage() {}

func (x *EnricherConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnricherConfig.ProtoReflect.Descriptor instead.
func (*EnricherConfig) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{16}
}

func (x *EnricherConfig) GetEnableFileHashEnricher() bool {
	if x != nil {
		return x.EnableFileHashEnricher
	}
	return false
}

func (x *EnricherConfig) GetSensitiveValuesRegex() string {
	if x != nil {
		return x.SensitiveValuesRegex
	}
	return ""
}

type NetflowConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled                     bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	SampleSubmitIntervalSeconds uint64 `protobuf:"varint,2,opt,name=sample_submit_interval_seconds,json=sampleSubmitIntervalSeconds,proto3" json:"sample_submit_interval_seconds,omitempty"`
}

func (x *NetflowConfig) Reset() {
	*x = NetflowConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetflowConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetflowConfig) ProtoMessage() {}

func (x *NetflowConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetflowConfig.ProtoReflect.Descriptor instead.
func (*NetflowConfig) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{17}
}

func (x *NetflowConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *NetflowConfig) GetSampleSubmitIntervalSeconds() uint64 {
	if x != nil {
		return x.SampleSubmitIntervalSeconds
	}
	return 0
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventType     EventType `protobuf:"varint,1,opt,name=event_type,json=eventType,proto3,enum=runtime.v1.EventType" json:"event_type,omitempty"`
	Timestamp     uint64    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Stored as unix timestamp in nanoseconds.
	ProcessName   string    `protobuf:"bytes,3,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	Namespace     string    `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	PodName       string    `protobuf:"bytes,5,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	ContainerName string    `protobuf:"bytes,6,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
	WorkloadName  string    `protobuf:"bytes,7,opt,name=workload_name,json=workloadName,proto3" json:"workload_name,omitempty"`
	WorkloadKind  string    `protobuf:"bytes,13,opt,name=workload_kind,json=workloadKind,proto3" json:"workload_kind,omitempty"`
	PodUid        string    `protobuf:"bytes,8,opt,name=pod_uid,json=podUid,proto3" json:"pod_uid,omitempty"`
	ContainerId   string    `protobuf:"bytes,9,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	CgroupId      uint64    `protobuf:"varint,10,opt,name=cgroup_id,json=cgroupId,proto3" json:"cgroup_id,omitempty"`
	HostPid       uint32    `protobuf:"varint,11,opt,name=host_pid,json=hostPid,proto3" json:"host_pid,omitempty"`
	WorkloadUid   string    `protobuf:"bytes,12,opt,name=workload_uid,json=workloadUid,proto3" json:"workload_uid,omitempty"`
	// Types that are assignable to Data:
	//
	//	*Event_Exec
	//	*Event_Dns
	//	*Event_File
	//	*Event_Tuple
	//	*Event_Signature
	//	*Event_Any
	Data isEvent_Data `protobuf_oneof:"data"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{18}
}

func (x *Event) GetEventType() EventType {
	if x != nil {
		return x.EventType
	}
	return EventType_UNKNOWN
}

func (x *Event) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Event) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *Event) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Event) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *Event) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *Event) GetWorkloadName() string {
	if x != nil {
		return x.WorkloadName
	}
	return ""
}

func (x *Event) GetWorkloadKind() string {
	if x != nil {
		return x.WorkloadKind
	}
	return ""
}

func (x *Event) GetPodUid() string {
	if x != nil {
		return x.PodUid
	}
	return ""
}

func (x *Event) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *Event) GetCgroupId() uint64 {
	if x != nil {
		return x.CgroupId
	}
	return 0
}

func (x *Event) GetHostPid() uint32 {
	if x != nil {
		return x.HostPid
	}
	return 0
}

func (x *Event) GetWorkloadUid() string {
	if x != nil {
		return x.WorkloadUid
	}
	return ""
}

func (m *Event) GetData() isEvent_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *Event) GetExec() *Exec {
	if x, ok := x.GetData().(*Event_Exec); ok {
		return x.Exec
	}
	return nil
}

func (x *Event) GetDns() *DNS {
	if x, ok := x.GetData().(*Event_Dns); ok {
		return x.Dns
	}
	return nil
}

func (x *Event) GetFile() *File {
	if x, ok := x.GetData().(*Event_File); ok {
		return x.File
	}
	return nil
}

func (x *Event) GetTuple() *Tuple {
	if x, ok := x.GetData().(*Event_Tuple); ok {
		return x.Tuple
	}
	return nil
}

func (x *Event) GetSignature() *SignatureEvent {
	if x, ok := x.GetData().(*Event_Signature); ok {
		return x.Signature
	}
	return nil
}

func (x *Event) GetAny() *Any {
	if x, ok := x.GetData().(*Event_Any); ok {
		return x.Any
	}
	return nil
}

type isEvent_Data interface {
	isEvent_Data()
}

type Event_Exec struct {
	Exec *Exec `protobuf:"bytes,21,opt,name=exec,proto3,oneof"`
}

type Event_Dns struct {
	Dns *DNS `protobuf:"bytes,22,opt,name=dns,proto3,oneof"`
}

type Event_File struct {
	File *File `protobuf:"bytes,23,opt,name=file,proto3,oneof"`
}

type Event_Tuple struct {
	Tuple *Tuple `protobuf:"bytes,24,opt,name=tuple,proto3,oneof"`
}

type Event_Signature struct {
	Signature *SignatureEvent `protobuf:"bytes,25,opt,name=signature,proto3,oneof"`
}

type Event_Any struct {
	Any *Any `protobuf:"bytes,26,opt,name=any,proto3,oneof"`
}

func (*Event_Exec) isEvent_Data() {}

func (*Event_Dns) isEvent_Data() {}

func (*Event_File) isEvent_Data() {}

func (*Event_Tuple) isEvent_Data() {}

func (*Event_Signature) isEvent_Data() {}

func (*Event_Any) isEvent_Data() {}

type WriteStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WriteStreamResponse) Reset() {
	*x = WriteStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteStreamResponse) ProtoMessage() {}

func (x *WriteStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteStreamResponse.ProtoReflect.Descriptor instead.
func (*WriteStreamResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{19}
}

type SendLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendLogsResponse) Reset() {
	*x = SendLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendLogsResponse) ProtoMessage() {}

func (x *SendLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendLogsResponse.ProtoReflect.Descriptor instead.
func (*SendLogsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{20}
}

type ContainerStatsBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ContainerStats `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ContainerStatsBatch) Reset() {
	*x = ContainerStatsBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerStatsBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerStatsBatch) ProtoMessage() {}

func (x *ContainerStatsBatch) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerStatsBatch.ProtoReflect.Descriptor instead.
func (*ContainerStatsBatch) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{21}
}

func (x *ContainerStatsBatch) GetItems() []*ContainerStats {
	if x != nil {
		return x.Items
	}
	return nil
}

type ContainerStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace     string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	PodName       string   `protobuf:"bytes,2,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	ContainerName string   `protobuf:"bytes,3,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
	WorkloadName  string   `protobuf:"bytes,4,opt,name=workload_name,json=workloadName,proto3" json:"workload_name,omitempty"`
	WorkloadKind  string   `protobuf:"bytes,7,opt,name=workload_kind,json=workloadKind,proto3" json:"workload_kind,omitempty"`
	PodUid        string   `protobuf:"bytes,5,opt,name=pod_uid,json=podUid,proto3" json:"pod_uid,omitempty"`
	ContainerId   string   `protobuf:"bytes,6,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Stats         []*Stats `protobuf:"bytes,21,rep,name=stats,proto3" json:"stats,omitempty"`
}

func (x *ContainerStats) Reset() {
	*x = ContainerStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerStats) ProtoMessage() {}

func (x *ContainerStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerStats.ProtoReflect.Descriptor instead.
func (*ContainerStats) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{22}
}

func (x *ContainerStats) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ContainerStats) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *ContainerStats) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *ContainerStats) GetWorkloadName() string {
	if x != nil {
		return x.WorkloadName
	}
	return ""
}

func (x *ContainerStats) GetWorkloadKind() string {
	if x != nil {
		return x.WorkloadKind
	}
	return ""
}

func (x *ContainerStats) GetPodUid() string {
	if x != nil {
		return x.PodUid
	}
	return ""
}

func (x *ContainerStats) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *ContainerStats) GetStats() []*Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type KubernetesDeltaItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event             KubernetesDeltaItemEvent `protobuf:"varint,1,opt,name=event,proto3,enum=runtime.v1.KubernetesDeltaItemEvent" json:"event,omitempty"`
	ObjectUid         string                   `protobuf:"bytes,2,opt,name=object_uid,json=objectUid,proto3" json:"object_uid,omitempty"`
	ObjectName        string                   `protobuf:"bytes,3,opt,name=object_name,json=objectName,proto3" json:"object_name,omitempty"`
	ObjectNamespace   string                   `protobuf:"bytes,4,opt,name=object_namespace,json=objectNamespace,proto3" json:"object_namespace,omitempty"`
	ObjectKind        string                   `protobuf:"bytes,5,opt,name=object_kind,json=objectKind,proto3" json:"object_kind,omitempty"`
	ObjectApiVersion  string                   `protobuf:"bytes,6,opt,name=object_api_version,json=objectApiVersion,proto3" json:"object_api_version,omitempty"`
	ObjectCreatedAt   *timestamppb.Timestamp   `protobuf:"bytes,7,opt,name=object_created_at,json=objectCreatedAt,proto3" json:"object_created_at,omitempty"`
	ObjectContainers  []*Container             `protobuf:"bytes,8,rep,name=object_containers,json=objectContainers,proto3" json:"object_containers,omitempty"`
	ObjectOwnerUid    string                   `protobuf:"bytes,9,opt,name=object_owner_uid,json=objectOwnerUid,proto3" json:"object_owner_uid,omitempty"`
	ObjectLabels      map[string]string        `protobuf:"bytes,10,rep,name=object_labels,json=objectLabels,proto3" json:"object_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ObjectAnnotations map[string]string        `protobuf:"bytes,11,rep,name=object_annotations,json=objectAnnotations,proto3" json:"object_annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ObjectStatus      []byte                   `protobuf:"bytes,12,opt,name=object_status,json=objectStatus,proto3" json:"object_status,omitempty"`
	ObjectSpec        []byte                   `protobuf:"bytes,13,opt,name=object_spec,json=objectSpec,proto3" json:"object_spec,omitempty"`
}

func (x *KubernetesDeltaItem) Reset() {
	*x = KubernetesDeltaItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubernetesDeltaItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesDeltaItem) ProtoMessage() {}

func (x *KubernetesDeltaItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesDeltaItem.ProtoReflect.Descriptor instead.
func (*KubernetesDeltaItem) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{23}
}

func (x *KubernetesDeltaItem) GetEvent() KubernetesDeltaItemEvent {
	if x != nil {
		return x.Event
	}
	return KubernetesDeltaItemEvent_DELTA_ADD
}

func (x *KubernetesDeltaItem) GetObjectUid() string {
	if x != nil {
		return x.ObjectUid
	}
	return ""
}

func (x *KubernetesDeltaItem) GetObjectName() string {
	if x != nil {
		return x.ObjectName
	}
	return ""
}

func (x *KubernetesDeltaItem) GetObjectNamespace() string {
	if x != nil {
		return x.ObjectNamespace
	}
	return ""
}

func (x *KubernetesDeltaItem) GetObjectKind() string {
	if x != nil {
		return x.ObjectKind
	}
	return ""
}

func (x *KubernetesDeltaItem) GetObjectApiVersion() string {
	if x != nil {
		return x.ObjectApiVersion
	}
	return ""
}

func (x *KubernetesDeltaItem) GetObjectCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ObjectCreatedAt
	}
	return nil
}

func (x *KubernetesDeltaItem) GetObjectContainers() []*Container {
	if x != nil {
		return x.ObjectContainers
	}
	return nil
}

func (x *KubernetesDeltaItem) GetObjectOwnerUid() string {
	if x != nil {
		return x.ObjectOwnerUid
	}
	return ""
}

func (x *KubernetesDeltaItem) GetObjectLabels() map[string]string {
	if x != nil {
		return x.ObjectLabels
	}
	return nil
}

func (x *KubernetesDeltaItem) GetObjectAnnotations() map[string]string {
	if x != nil {
		return x.ObjectAnnotations
	}
	return nil
}

func (x *KubernetesDeltaItem) GetObjectStatus() []byte {
	if x != nil {
		return x.ObjectStatus
	}
	return nil
}

func (x *KubernetesDeltaItem) GetObjectSpec() []byte {
	if x != nil {
		return x.ObjectSpec
	}
	return nil
}

type Container struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ImageName string `protobuf:"bytes,2,opt,name=image_name,json=imageName,proto3" json:"image_name,omitempty"`
}

func (x *Container) Reset() {
	*x = Container{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Container) ProtoMessage() {}

func (x *Container) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Container.ProtoReflect.Descriptor instead.
func (*Container) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{24}
}

func (x *Container) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Container) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

type KubernetesDeltaIngestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KubernetesDeltaIngestResponse) Reset() {
	*x = KubernetesDeltaIngestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubernetesDeltaIngestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesDeltaIngestResponse) ProtoMessage() {}

func (x *KubernetesDeltaIngestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesDeltaIngestResponse.ProtoReflect.Descriptor instead.
func (*KubernetesDeltaIngestResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{25}
}

type ImageMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageName    string                 `protobuf:"bytes,1,opt,name=image_name,json=imageName,proto3" json:"image_name,omitempty"`
	ImageId      string                 `protobuf:"bytes,2,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	ImageDigest  string                 `protobuf:"bytes,3,opt,name=image_digest,json=imageDigest,proto3" json:"image_digest,omitempty"`
	Architecture string                 `protobuf:"bytes,5,opt,name=architecture,proto3" json:"architecture,omitempty"`
	OsName       string                 `protobuf:"bytes,6,opt,name=os_name,json=osName,proto3" json:"os_name,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ResourceIds  []string               `protobuf:"bytes,8,rep,name=resource_ids,json=resourceIds,proto3" json:"resource_ids,omitempty"`
	Packages     []byte                 `protobuf:"bytes,9,opt,name=packages,proto3" json:"packages,omitempty"`                        // JSON containing []github.com/aquasecurity/trivy/pkg/fanal/types.BlobInfo type.
	Manifest     []byte                 `protobuf:"bytes,10,opt,name=manifest,proto3" json:"manifest,omitempty"`                       // JSON containing github.com/google/go-containerregistry/pkg/v1.Manifest type.
	Index        []byte                 `protobuf:"bytes,11,opt,name=index,proto3" json:"index,omitempty"`                             // JSON containing github.com/google/go-containerregistry/pkg/v1.IndexManifest type.
	ConfigFile   []byte                 `protobuf:"bytes,12,opt,name=config_file,json=configFile,proto3" json:"config_file,omitempty"` // JSON containing github.com/google/go-containerregistry/pkg/v1.ConfigFile type.
}

func (x *ImageMetadata) Reset() {
	*x = ImageMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageMetadata) ProtoMessage() {}

func (x *ImageMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageMetadata.ProtoReflect.Descriptor instead.
func (*ImageMetadata) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{26}
}

func (x *ImageMetadata) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

func (x *ImageMetadata) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *ImageMetadata) GetImageDigest() string {
	if x != nil {
		return x.ImageDigest
	}
	return ""
}

func (x *ImageMetadata) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *ImageMetadata) GetOsName() string {
	if x != nil {
		return x.OsName
	}
	return ""
}

func (x *ImageMetadata) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ImageMetadata) GetResourceIds() []string {
	if x != nil {
		return x.ResourceIds
	}
	return nil
}

func (x *ImageMetadata) GetPackages() []byte {
	if x != nil {
		return x.Packages
	}
	return nil
}

func (x *ImageMetadata) GetManifest() []byte {
	if x != nil {
		return x.Manifest
	}
	return nil
}

func (x *ImageMetadata) GetIndex() []byte {
	if x != nil {
		return x.Index
	}
	return nil
}

func (x *ImageMetadata) GetConfigFile() []byte {
	if x != nil {
		return x.ConfigFile
	}
	return nil
}

type ImageMetadataIngestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ImageMetadataIngestResponse) Reset() {
	*x = ImageMetadataIngestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageMetadataIngestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageMetadataIngestResponse) ProtoMessage() {}

func (x *ImageMetadataIngestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageMetadataIngestResponse.ProtoReflect.Descriptor instead.
func (*ImageMetadataIngestResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{27}
}

type GetSyncStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageIds []string `protobuf:"bytes,1,rep,name=image_ids,json=imageIds,proto3" json:"image_ids,omitempty"`
}

func (x *GetSyncStateRequest) Reset() {
	*x = GetSyncStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSyncStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncStateRequest) ProtoMessage() {}

func (x *GetSyncStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncStateRequest.ProtoReflect.Descriptor instead.
func (*GetSyncStateRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{28}
}

func (x *GetSyncStateRequest) GetImageIds() []string {
	if x != nil {
		return x.ImageIds
	}
	return nil
}

type GetSyncStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Images *ImagesSyncState `protobuf:"bytes,1,opt,name=images,proto3" json:"images,omitempty"`
}

func (x *GetSyncStateResponse) Reset() {
	*x = GetSyncStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSyncStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncStateResponse) ProtoMessage() {}

func (x *GetSyncStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncStateResponse.ProtoReflect.Descriptor instead.
func (*GetSyncStateResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{29}
}

func (x *GetSyncStateResponse) GetImages() *ImagesSyncState {
	if x != nil {
		return x.Images
	}
	return nil
}

type ImagesSyncState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FullResyncRequired bool     `protobuf:"varint,1,opt,name=full_resync_required,json=fullResyncRequired,proto3" json:"full_resync_required,omitempty"`
	Images             []*Image `protobuf:"bytes,2,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *ImagesSyncState) Reset() {
	*x = ImagesSyncState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImagesSyncState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImagesSyncState) ProtoMessage() {}

func (x *ImagesSyncState) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImagesSyncState.ProtoReflect.Descriptor instead.
func (*ImagesSyncState) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{30}
}

func (x *ImagesSyncState) GetFullResyncRequired() bool {
	if x != nil {
		return x.FullResyncRequired
	}
	return false
}

func (x *ImagesSyncState) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Architecture string          `protobuf:"bytes,3,opt,name=architecture,proto3" json:"architecture,omitempty"`
	ResourceIds  []string        `protobuf:"bytes,4,rep,name=resource_ids,json=resourceIds,proto3" json:"resource_ids,omitempty"`
	ScanStatus   ImageScanStatus `protobuf:"varint,5,opt,name=scan_status,json=scanStatus,proto3,enum=runtime.v1.ImageScanStatus" json:"scan_status,omitempty"`
	ScanError    string          `protobuf:"bytes,6,opt,name=scan_error,json=scanError,proto3" json:"scan_error,omitempty"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{31}
}

func (x *Image) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Image) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Image) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *Image) GetResourceIds() []string {
	if x != nil {
		return x.ResourceIds
	}
	return nil
}

func (x *Image) GetScanStatus() ImageScanStatus {
	if x != nil {
		return x.ScanStatus
	}
	return ImageScanStatus_IMAGE_SCAN_STATUS_UNKNOWN
}

func (x *Image) GetScanError() string {
	if x != nil {
		return x.ScanError
	}
	return ""
}

type UpdateSyncStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FullSnapshot bool     `protobuf:"varint,1,opt,name=full_snapshot,json=fullSnapshot,proto3" json:"full_snapshot,omitempty"`
	Images       []*Image `protobuf:"bytes,2,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *UpdateSyncStateRequest) Reset() {
	*x = UpdateSyncStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSyncStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSyncStateRequest) ProtoMessage() {}

func (x *UpdateSyncStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSyncStateRequest.ProtoReflect.Descriptor instead.
func (*UpdateSyncStateRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateSyncStateRequest) GetFullSnapshot() bool {
	if x != nil {
		return x.FullSnapshot
	}
	return false
}

func (x *UpdateSyncStateRequest) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

type UpdateSyncStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSyncStateResponse) Reset() {
	*x = UpdateSyncStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSyncStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSyncStateResponse) ProtoMessage() {}

func (x *UpdateSyncStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSyncStateResponse.ProtoReflect.Descriptor instead.
func (*UpdateSyncStateResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{33}
}

type KubeBenchReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Controls []*KubeBenchControls `protobuf:"bytes,1,rep,name=controls,proto3" json:"controls,omitempty"`
	Node     *KubeBenchNode       `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *KubeBenchReport) Reset() {
	*x = KubeBenchReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubeBenchReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubeBenchReport) ProtoMessage() {}

func (x *KubeBenchReport) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubeBenchReport.ProtoReflect.Descriptor instead.
func (*KubeBenchReport) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{34}
}

func (x *KubeBenchReport) GetControls() []*KubeBenchControls {
	if x != nil {
		return x.Controls
	}
	return nil
}

func (x *KubeBenchReport) GetNode() *KubeBenchNode {
	if x != nil {
		return x.Node
	}
	return nil
}

type KubeBenchReportIngestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KubeBenchReportIngestResponse) Reset() {
	*x = KubeBenchReportIngestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubeBenchReportIngestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubeBenchReportIngestResponse) ProtoMessage() {}

func (x *KubeBenchReportIngestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubeBenchReportIngestResponse.ProtoReflect.Descriptor instead.
func (*KubeBenchReportIngestResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{35}
}

type KubeBenchNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeName    string `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	ResourceUid string `protobuf:"bytes,2,opt,name=resource_uid,json=resourceUid,proto3" json:"resource_uid,omitempty"`
}

func (x *KubeBenchNode) Reset() {
	*x = KubeBenchNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubeBenchNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubeBenchNode) ProtoMessage() {}

func (x *KubeBenchNode) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubeBenchNode.ProtoReflect.Descriptor instead.
func (*KubeBenchNode) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{36}
}

func (x *KubeBenchNode) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *KubeBenchNode) GetResourceUid() string {
	if x != nil {
		return x.ResourceUid
	}
	return ""
}

type KubeBenchControls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string            `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Groups  []*KubeBenchGroup `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *KubeBenchControls) Reset() {
	*x = KubeBenchControls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubeBenchControls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubeBenchControls) ProtoMessage() {}

func (x *KubeBenchControls) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubeBenchControls.ProtoReflect.Descriptor instead.
func (*KubeBenchControls) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{37}
}

func (x *KubeBenchControls) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *KubeBenchControls) GetGroups() []*KubeBenchGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

type KubeBenchGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checks []*KubeBenchCheck `protobuf:"bytes,1,rep,name=checks,proto3" json:"checks,omitempty"`
}

func (x *KubeBenchGroup) Reset() {
	*x = KubeBenchGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubeBenchGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubeBenchGroup) ProtoMessage() {}

func (x *KubeBenchGroup) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubeBenchGroup.ProtoReflect.Descriptor instead.
func (*KubeBenchGroup) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{38}
}

func (x *KubeBenchGroup) GetChecks() []*KubeBenchCheck {
	if x != nil {
		return x.Checks
	}
	return nil
}

type KubeBenchCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Text     string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	TestInfo []string `protobuf:"bytes,3,rep,name=test_info,json=testInfo,proto3" json:"test_info,omitempty"`
	State    string   `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *KubeBenchCheck) Reset() {
	*x = KubeBenchCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubeBenchCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubeBenchCheck) ProtoMessage() {}

func (x *KubeBenchCheck) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubeBenchCheck.ProtoReflect.Descriptor instead.
func (*KubeBenchCheck) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{39}
}

func (x *KubeBenchCheck) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *KubeBenchCheck) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *KubeBenchCheck) GetTestInfo() []string {
	if x != nil {
		return x.TestInfo
	}
	return nil
}

func (x *KubeBenchCheck) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type KubeLinterReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checks []*KubeLinterCheck `protobuf:"bytes,1,rep,name=checks,proto3" json:"checks,omitempty"`
}

func (x *KubeLinterReport) Reset() {
	*x = KubeLinterReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubeLinterReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubeLinterReport) ProtoMessage() {}

func (x *KubeLinterReport) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubeLinterReport.ProtoReflect.Descriptor instead.
func (*KubeLinterReport) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{40}
}

func (x *KubeLinterReport) GetChecks() []*KubeLinterCheck {
	if x != nil {
		return x.Checks
	}
	return nil
}

type KubeLinterReportIngestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KubeLinterReportIngestResponse) Reset() {
	*x = KubeLinterReportIngestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubeLinterReportIngestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubeLinterReportIngestResponse) ProtoMessage() {}

func (x *KubeLinterReportIngestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubeLinterReportIngestResponse.ProtoReflect.Descriptor instead.
func (*KubeLinterReportIngestResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{41}
}

type KubeLinterCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceUid string `protobuf:"bytes,1,opt,name=resource_uid,json=resourceUid,proto3" json:"resource_uid,omitempty"`
	Passed      uint64 `protobuf:"varint,2,opt,name=passed,proto3" json:"passed,omitempty"` // Represented as bitmasks of passed checks.
	Failed      uint64 `protobuf:"varint,3,opt,name=failed,proto3" json:"failed,omitempty"` // Represented as bitmasks of failed checks.
}

func (x *KubeLinterCheck) Reset() {
	*x = KubeLinterCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubeLinterCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubeLinterCheck) ProtoMessage() {}

func (x *KubeLinterCheck) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_runtime_agent_api_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubeLinterCheck.ProtoReflect.Descriptor instead.
func (*KubeLinterCheck) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP(), []int{42}
}

func (x *KubeLinterCheck) GetResourceUid() string {
	if x != nil {
		return x.ResourceUid
	}
	return ""
}

func (x *KubeLinterCheck) GetPassed() uint64 {
	if x != nil {
		return x.Passed
	}
	return 0
}

func (x *KubeLinterCheck) GetFailed() uint64 {
	if x != nil {
		return x.Failed
	}
	return 0
}

var File_api_v1_runtime_runtime_agent_api_proto protoreflect.FileDescriptor

var file_api_v1_runtime_runtime_agent_api_proto_rawDesc = []byte{
	0x0a, 0x26, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x76, 0x31, 0x1a, 0x23, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9c, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x12, 0x2f, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x05, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x42, 0x10, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x4d, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf5, 0x06, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f,
	0x67, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x6f, 0x67, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x6c, 0x6f, 0x67, 0x52, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f,
	0x62, 0x75, 0x72, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6c, 0x6f, 0x67,
	0x52, 0x61, 0x74, 0x65, 0x42, 0x75, 0x72, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x72,
	0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6f, 0x64, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x68, 0x74, 0x74, 0x70,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x68, 0x74, 0x74, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x37, 0x0a, 0x18, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x68, 0x74,
	0x74, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x48, 0x74, 0x74,
	0x70, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70,
	0x79, 0x72, 0x6f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x79, 0x72, 0x6f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x4f, 0x0a, 0x11, 0x63, 0x61, 0x73, 0x74, 0x61, 0x69, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x73, 0x74, 0x61,
	0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x10, 0x63, 0x61, 0x73, 0x74, 0x61, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x61, 0x73, 0x74, 0x61, 0x69, 0x5f, 0x65, 0x6e,
	0x76, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x73, 0x74, 0x61, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x09, 0x63, 0x61, 0x73, 0x74, 0x61, 0x69, 0x45, 0x6e, 0x76, 0x12, 0x3a, 0x0a, 0x0a,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x12, 0x30, 0x0a, 0x06, 0x6c, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x0a, 0x6b, 0x75,
	0x62, 0x65, 0x5f, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x75, 0x62, 0x65,
	0x42, 0x65, 0x6e, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x6b, 0x75, 0x62,
	0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x12, 0x2d, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05,
	0x64, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x0c, 0x6a, 0x6f, 0x62, 0x73, 0x5f, 0x63, 0x6c,
	0x65, 0x61, 0x6e, 0x75, 0x70, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x73, 0x43, 0x6c, 0x65,
	0x61, 0x6e, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x6a, 0x6f, 0x62, 0x73,
	0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x12, 0x44, 0x0a, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x57, 0x0a,
	0x16, 0x43, 0x61, 0x73, 0x74, 0x61, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3d, 0x0a, 0x1b, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc7, 0x05, 0x0a, 0x0f, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x53, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x61, 0x73, 0x74, 0x61, 0x69, 0x5f, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x61, 0x73, 0x74, 0x61, 0x69, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x63, 0x61,
	0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x63, 0x61, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x63, 0x61, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x12, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x63,
	0x61, 0x6e, 0x73, 0x12, 0x3a, 0x0a, 0x1a, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x6a, 0x6f, 0x62, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x75, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x73, 0x63, 0x61, 0x6e, 0x4a, 0x6f, 0x62,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x70, 0x75, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x70, 0x75, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x70, 0x75, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x68, 0x6c, 0x61, 0x72, 0x65, 0x5f, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x70, 0x68,
	0x6c, 0x61, 0x72, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x1c, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f,
	0x70, 0x75, 0x6c, 0x6c, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x19, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x64, 0x65,
	0x6c, 0x61, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x44,
	0x65, 0x6c, 0x61, 0x79, 0x12, 0x3a, 0x0a, 0x1a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x63,
	0x61, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x53,
	0x63, 0x61, 0x6e, 0x42, 0x6c, 0x6f, 0x62, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x55, 0x72, 0x6c,
	0x22, 0x6c, 0x0a, 0x0c, 0x4c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x63,
	0x61, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x63, 0x61, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x22, 0xe5,
	0x01, 0x0a, 0x0f, 0x4b, 0x75, 0x62, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x63, 0x61, 0x6e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x15, 0x6a, 0x6f, 0x62, 0x5f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x75, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6a, 0x6f, 0x62, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x50, 0x75, 0x6c, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x12, 0x23, 0x0a, 0x0d, 0x6a, 0x6f, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x74, 0x61,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x0e,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x6c,
	0x74, 0x61, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x75, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x84, 0x01, 0x0a, 0x11, 0x4a, 0x6f, 0x62, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x5f, 0x6a, 0x6f, 0x62, 0x5f,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x65, 0x61, 0x6e,
	0x75, 0x70, 0x4a, 0x6f, 0x62, 0x41, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0xf0, 0x07, 0x0a, 0x0b, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x6f, 0x67, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x6c, 0x6f, 0x67, 0x52, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12,
	0x24, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x75, 0x72, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x52, 0x61, 0x74, 0x65,
	0x42, 0x75, 0x72, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x6f,
	0x67, 0x73, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x73, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x74, 0x66, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x74, 0x66, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x79, 0x72, 0x6f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x79, 0x72, 0x6f,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x64, 0x5f, 0x73, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x64, 0x53, 0x6f, 0x63, 0x6b, 0x50, 0x61, 0x74, 0x68, 0x12, 0x28, 0x0a, 0x10, 0x68,
	0x6f, 0x73, 0x74, 0x5f, 0x63, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x68, 0x6f, 0x73, 0x74, 0x43, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x44, 0x69, 0x72, 0x12, 0x37, 0x0a, 0x18, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x5f, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x48, 0x74, 0x74, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x3c,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x1a,
	0x65, 0x62, 0x70, 0x66, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f,
	0x63, 0x70, 0x75, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x16, 0x65, 0x62, 0x70, 0x66, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x50, 0x65, 0x72, 0x43,
	0x70, 0x75, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x1c, 0x65, 0x62, 0x70, 0x66,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x18,
	0x65, 0x62, 0x70, 0x66, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x75, 0x74, 0x65,
	0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x10, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x73, 0x12, 0x59, 0x0a, 0x17, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x45, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x15, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x37,
	0x0a, 0x0a, 0x63, 0x61, 0x73, 0x74, 0x61, 0x69, 0x5f, 0x65, 0x6e, 0x76, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x61, 0x73, 0x74, 0x61, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x63, 0x61,
	0x73, 0x74, 0x61, 0x69, 0x45, 0x6e, 0x76, 0x12, 0x43, 0x0a, 0x0f, 0x65, 0x6e, 0x72, 0x69, 0x63,
	0x68, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e,
	0x72, 0x69, 0x63, 0x68, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0e, 0x65, 0x6e,
	0x72, 0x69, 0x63, 0x68, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x33, 0x0a, 0x07,
	0x6e, 0x65, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x66, 0x6c,
	0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x6f,
	0x77, 0x12, 0x2e, 0x0a, 0x13, 0x65, 0x62, 0x70, 0x66, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x65, 0x62, 0x70, 0x66, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x31, 0x0a, 0x15, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x98, 0x01, 0x0a,
	0x1a, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x33, 0x0a, 0x16, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x69, 0x6e, 0x6b, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x53, 0x69, 0x6e, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x45, 0x0a, 0x1f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x5f, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1c, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x53, 0x63, 0x72, 0x61, 0x70, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0x3e, 0x0a, 0x1d, 0x53, 0x4f, 0x43, 0x4b, 0x53,
	0x35, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xed, 0x02, 0x0a, 0x15, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x43, 0x0a, 0x1e, 0x74, 0x74, 0x79, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x74, 0x74, 0x79,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x49, 0x0a, 0x21, 0x73, 0x6f, 0x63, 0x6b,
	0x73, 0x35, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x1e, 0x73, 0x6f, 0x63, 0x6b, 0x73, 0x35, 0x44, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x72, 0x0a, 0x20, 0x73, 0x6f, 0x63, 0x6b, 0x73, 0x35, 0x5f, 0x64, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x4f, 0x43, 0x4b, 0x53,
	0x35, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x1d, 0x73, 0x6f, 0x63, 0x6b, 0x73, 0x35,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x6d, 0x0a, 0x0c, 0x43, 0x61, 0x73, 0x74, 0x61,
	0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x70, 0x69, 0x47, 0x72, 0x70, 0x63, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x0e, 0x45, 0x6e, 0x72, 0x69, 0x63,
	0x68, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x39, 0x0a, 0x19, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x65, 0x6e,
	0x72, 0x69, 0x63, 0x68, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x45, 0x6e, 0x72, 0x69,
	0x63, 0x68, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x67, 0x65, 0x78, 0x22, 0x6e, 0x0a, 0x0d, 0x4e, 0x65,
	0x74, 0x66, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x43, 0x0a, 0x1e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1b, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0xc8, 0x05, 0x0a, 0x05, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6f, 0x64,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x77,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6b, 0x69, 0x6e,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x64, 0x5f, 0x75, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x64, 0x55, 0x69, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x70, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x50, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72,
	0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x04,
	0x65, 0x78, 0x65, 0x63, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x48, 0x00, 0x52, 0x04,
	0x65, 0x78, 0x65, 0x63, 0x12, 0x23, 0x0a, 0x03, 0x64, 0x6e, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x4e, 0x53, 0x48, 0x00, 0x52, 0x03, 0x64, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x04, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x04, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x29, 0x0a, 0x05, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x75,
	0x70, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x05, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x12, 0x3a, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x03, 0x61, 0x6e, 0x79, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x03, 0x61, 0x6e, 0x79, 0x42, 0x06, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x15, 0x0a, 0x13, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x0a, 0x10,
	0x53, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x47, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x30, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x9f, 0x02, 0x0a, 0x0e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6f,
	0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x64, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x64, 0x55, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x22, 0xcd, 0x06, 0x0a, 0x13,
	0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x3a, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x24, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x49,
	0x74, 0x65, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x41,
	0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x11, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x42, 0x0a, 0x11, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x52, 0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12,
	0x56, 0x0a, 0x0d, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x44, 0x65,
	0x6c, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x65, 0x0a, 0x12, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x74, 0x61,
	0x49, 0x74, 0x65, 0x6d, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x70,
	0x65, 0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x53, 0x70, 0x65, 0x63, 0x1a, 0x3f, 0x0a, 0x11, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x44, 0x0a, 0x16, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x41,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3e, 0x0a, 0x09, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x1f, 0x0a, 0x1d, 0x4b,
	0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x49, 0x6e,
	0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf6, 0x02, 0x0a,
	0x0d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x6f, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x73, 0x22, 0x4b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53,
	0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x06, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0x6e, 0x0a, 0x0f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x53,
	0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x75, 0x6c, 0x6c,
	0x5f, 0x72, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x66, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x79,
	0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0xcf, 0x01, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69,
	0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x63,
	0x61, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x73, 0x63,
	0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x61, 0x6e,
	0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63,
	0x61, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x68, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x66, 0x75, 0x6c, 0x6c, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x22, 0x19, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7b, 0x0a, 0x0f,
	0x4b, 0x75, 0x62, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x39, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4b,
	0x75, 0x62, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73,
	0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x6e, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0x1f, 0x0a, 0x1d, 0x4b, 0x75, 0x62,
	0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x67, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4f, 0x0a, 0x0d, 0x4b, 0x75,
	0x62, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x69, 0x64, 0x22, 0x61, 0x0a, 0x11, 0x4b,
	0x75, 0x62, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x06, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x42, 0x65, 0x6e, 0x63,
	0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x44,
	0x0a, 0x0e, 0x4b, 0x75, 0x62, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x32, 0x0a, 0x06, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x75,
	0x62, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x06, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x73, 0x22, 0x67, 0x0a, 0x0e, 0x4b, 0x75, 0x62, 0x65, 0x42, 0x65, 0x6e, 0x63,
	0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x47, 0x0a,
	0x10, 0x4b, 0x75, 0x62, 0x65, 0x4c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x33, 0x0a, 0x06, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4b,
	0x75, 0x62, 0x65, 0x4c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x06,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x22, 0x20, 0x0a, 0x1e, 0x4b, 0x75, 0x62, 0x65, 0x4c, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x64, 0x0a, 0x0f, 0x4b, 0x75, 0x62, 0x65,
	0x4c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x2a, 0xeb,
	0x01, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x44, 0x4e, 0x53, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x54, 0x43, 0x50, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x03, 0x12,
	0x1b, 0x0a, 0x17, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x43, 0x50, 0x5f, 0x43, 0x4f, 0x4e,
	0x4e, 0x45, 0x43, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x43, 0x50, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x45, 0x4e,
	0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x45,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x4f, 0x4f, 0x4d, 0x10, 0x07,
	0x12, 0x15, 0x0a, 0x11, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x41, 0x47, 0x49, 0x43, 0x5f,
	0x57, 0x52, 0x49, 0x54, 0x45, 0x10, 0x08, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x54, 0x55, 0x52, 0x45, 0x10, 0x09, 0x12, 0x0e, 0x0a, 0x09,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x4e, 0x59, 0x10, 0xe7, 0x07, 0x2a, 0x4d, 0x0a, 0x18,
	0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x49,
	0x74, 0x65, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x45, 0x4c, 0x54,
	0x41, 0x5f, 0x41, 0x44, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x45, 0x4c, 0x54, 0x41,
	0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x45, 0x4c,
	0x54, 0x41, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x02, 0x2a, 0x90, 0x01, 0x0a, 0x0f,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1d, 0x0a, 0x19, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x43, 0x41, 0x4e, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1d,
	0x0a, 0x19, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x43, 0x41, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x53, 0x43, 0x41, 0x4e, 0x4e, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1d, 0x0a,
	0x19, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x43, 0x41, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c,
	0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x43, 0x41, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x53, 0x43, 0x41, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x32, 0x8c,
	0x08, 0x0a, 0x17, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x41, 0x50, 0x49, 0x12, 0x5f, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23,
	0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x11, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x12, 0x11, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x12, 0x4c, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x73,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x14, 0x2e, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x12, 0x61, 0x0a, 0x19, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x12, 0x1f, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x1a, 0x1f, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x12, 0x4e, 0x0a, 0x12, 0x4e, 0x65, 0x74,
	0x66, 0x6c, 0x6f, 0x77, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x13, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74,
	0x66, 0x6c, 0x6f, 0x77, 0x1a, 0x1f, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x12, 0x53, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c,
	0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x22, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x15,
	0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x49,
	0x6e, 0x67, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x44, 0x65, 0x6c,
	0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x29, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x44, 0x65,
	0x6c, 0x74, 0x61, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x5b, 0x0a, 0x13, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x27, 0x2e, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x15, 0x4b, 0x75, 0x62, 0x65, 0x42, 0x65, 0x6e, 0x63,
	0x68, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x2e,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x42,
	0x65, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x29, 0x2e, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x42, 0x65, 0x6e, 0x63,
	0x68, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x16, 0x4b, 0x75, 0x62, 0x65, 0x4c,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x67, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4b,
	0x75, 0x62, 0x65, 0x4c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x1a,
	0x2a, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x75, 0x62,
	0x65, 0x4c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x67,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2a, 0x5a,
	0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x73, 0x74,
	0x61, 0x69, 0x2f, 0x6b, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_api_v1_runtime_runtime_agent_api_proto_rawDescOnce sync.Once
	file_api_v1_runtime_runtime_agent_api_proto_rawDescData = file_api_v1_runtime_runtime_agent_api_proto_rawDesc
)

func file_api_v1_runtime_runtime_agent_api_proto_rawDescGZIP() []byte {
	file_api_v1_runtime_runtime_agent_api_proto_rawDescOnce.Do(func() {
		file_api_v1_runtime_runtime_agent_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_runtime_runtime_agent_api_proto_rawDescData)
	})
	return file_api_v1_runtime_runtime_agent_api_proto_rawDescData
}

var file_api_v1_runtime_runtime_agent_api_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_v1_runtime_runtime_agent_api_proto_msgTypes = make([]protoimpl.MessageInfo, 45)
var file_api_v1_runtime_runtime_agent_api_proto_goTypes = []interface{}{
	(EventType)(0),                         // 0: runtime.v1.EventType
	(KubernetesDeltaItemEvent)(0),          // 1: runtime.v1.KubernetesDeltaItemEvent
	(ImageScanStatus)(0),                   // 2: runtime.v1.ImageScanStatus
	(*GetConfigurationRequest)(nil),        // 3: runtime.v1.GetConfigurationRequest
	(*GetConfigurationResponse)(nil),       // 4: runtime.v1.GetConfigurationResponse
	(*Configuration)(nil),                  // 5: runtime.v1.Configuration
	(*ControllerConfig)(nil),               // 6: runtime.v1.ControllerConfig
	(*CastaiControllerConfig)(nil),         // 7: runtime.v1.CastaiControllerConfig
	(*ImageScanConfig)(nil),                // 8: runtime.v1.ImageScanConfig
	(*LinterConfig)(nil),                   // 9: runtime.v1.LinterConfig
	(*KubeBenchConfig)(nil),                // 10: runtime.v1.KubeBenchConfig
	(*DeltaConfig)(nil),                    // 11: runtime.v1.DeltaConfig
	(*JobsCleanupConfig)(nil),              // 12: runtime.v1.JobsCleanupConfig
	(*AgentConfig)(nil),                    // 13: runtime.v1.AgentConfig
	(*ControllerAgentConfig)(nil),          // 14: runtime.v1.ControllerAgentConfig
	(*AgentStateControllerConfig)(nil),     // 15: runtime.v1.AgentStateControllerConfig
	(*SOCKS5DetectedSignatureConfig)(nil),  // 16: runtime.v1.SOCKS5DetectedSignatureConfig
	(*SignatureEngineConfig)(nil),          // 17: runtime.v1.SignatureEngineConfig
	(*CastaiConfig)(nil),                   // 18: runtime.v1.CastaiConfig
	(*EnricherConfig)(nil),                 // 19: runtime.v1.EnricherConfig
	(*NetflowConfig)(nil),                  // 20: runtime.v1.NetflowConfig
	(*Event)(nil),                          // 21: runtime.v1.Event
	(*WriteStreamResponse)(nil),            // 22: runtime.v1.WriteStreamResponse
	(*SendLogsResponse)(nil),               // 23: runtime.v1.SendLogsResponse
	(*ContainerStatsBatch)(nil),            // 24: runtime.v1.ContainerStatsBatch
	(*ContainerStats)(nil),                 // 25: runtime.v1.ContainerStats
	(*KubernetesDeltaItem)(nil),            // 26: runtime.v1.KubernetesDeltaItem
	(*Container)(nil),                      // 27: runtime.v1.Container
	(*KubernetesDeltaIngestResponse)(nil),  // 28: runtime.v1.KubernetesDeltaIngestResponse
	(*ImageMetadata)(nil),                  // 29: runtime.v1.ImageMetadata
	(*ImageMetadataIngestResponse)(nil),    // 30: runtime.v1.ImageMetadataIngestResponse
	(*GetSyncStateRequest)(nil),            // 31: runtime.v1.GetSyncStateRequest
	(*GetSyncStateResponse)(nil),           // 32: runtime.v1.GetSyncStateResponse
	(*ImagesSyncState)(nil),                // 33: runtime.v1.ImagesSyncState
	(*Image)(nil),                          // 34: runtime.v1.Image
	(*UpdateSyncStateRequest)(nil),         // 35: runtime.v1.UpdateSyncStateRequest
	(*UpdateSyncStateResponse)(nil),        // 36: runtime.v1.UpdateSyncStateResponse
	(*KubeBenchReport)(nil),                // 37: runtime.v1.KubeBenchReport
	(*KubeBenchReportIngestResponse)(nil),  // 38: runtime.v1.KubeBenchReportIngestResponse
	(*KubeBenchNode)(nil),                  // 39: runtime.v1.KubeBenchNode
	(*KubeBenchControls)(nil),              // 40: runtime.v1.KubeBenchControls
	(*KubeBenchGroup)(nil),                 // 41: runtime.v1.KubeBenchGroup
	(*KubeBenchCheck)(nil),                 // 42: runtime.v1.KubeBenchCheck
	(*KubeLinterReport)(nil),               // 43: runtime.v1.KubeLinterReport
	(*KubeLinterReportIngestResponse)(nil), // 44: runtime.v1.KubeLinterReportIngestResponse
	(*KubeLinterCheck)(nil),                // 45: runtime.v1.KubeLinterCheck
	nil,                                    // 46: runtime.v1.KubernetesDeltaItem.ObjectLabelsEntry
	nil,                                    // 47: runtime.v1.KubernetesDeltaItem.ObjectAnnotationsEntry
	(*Exec)(nil),                           // 48: runtime.v1.Exec
	(*DNS)(nil),                            // 49: runtime.v1.DNS
	(*File)(nil),                           // 50: runtime.v1.File
	(*Tuple)(nil),                          // 51: runtime.v1.Tuple
	(*SignatureEvent)(nil),                 // 52: runtime.v1.SignatureEvent
	(*Any)(nil),                            // 53: runtime.v1.Any
	(*Stats)(nil),                          // 54: runtime.v1.Stats
	(*timestamppb.Timestamp)(nil),          // 55: google.protobuf.Timestamp
	(*LogEvent)(nil),                       // 56: runtime.v1.LogEvent
	(*Netflow)(nil),                        // 57: runtime.v1.Netflow
}
var file_api_v1_runtime_runtime_agent_api_proto_depIdxs = []int32{
	6,  // 0: runtime.v1.GetConfigurationRequest.controller:type_name -> runtime.v1.ControllerConfig
	13, // 1: runtime.v1.GetConfigurationRequest.agent:type_name -> runtime.v1.AgentConfig
	5,  // 2: runtime.v1.GetConfigurationResponse.config:type_name -> runtime.v1.Configuration
	7,  // 3: runtime.v1.ControllerConfig.castai_controller:type_name -> runtime.v1.CastaiControllerConfig
	18, // 4: runtime.v1.ControllerConfig.castai_env:type_name -> runtime.v1.CastaiConfig
	8,  // 5: runtime.v1.ControllerConfig.image_scan:type_name -> runtime.v1.ImageScanConfig
	9,  // 6: runtime.v1.ControllerConfig.linter:type_name -> runtime.v1.LinterConfig
	10, // 7: runtime.v1.ControllerConfig.kube_bench:type_name -> runtime.v1.KubeBenchConfig
	11, // 8: runtime.v1.ControllerConfig.delta:type_name -> runtime.v1.DeltaConfig
	12, // 9: runtime.v1.ControllerConfig.jobs_cleanup:type_name -> runtime.v1.JobsCleanupConfig
	14, // 10: runtime.v1.ControllerConfig.agent_config:type_name -> runtime.v1.ControllerAgentConfig
	15, // 11: runtime.v1.AgentConfig.state:type_name -> runtime.v1.AgentStateControllerConfig
	17, // 12: runtime.v1.AgentConfig.signature_engine_config:type_name -> runtime.v1.SignatureEngineConfig
	18, // 13: runtime.v1.AgentConfig.castai_env:type_name -> runtime.v1.CastaiConfig
	19, // 14: runtime.v1.AgentConfig.enricher_config:type_name -> runtime.v1.EnricherConfig
	20, // 15: runtime.v1.AgentConfig.netflow:type_name -> runtime.v1.NetflowConfig
	16, // 16: runtime.v1.SignatureEngineConfig.socks5_detected_signature_config:type_name -> runtime.v1.SOCKS5DetectedSignatureConfig
	0,  // 17: runtime.v1.Event.event_type:type_name -> runtime.v1.EventType
	48, // 18: runtime.v1.Event.exec:type_name -> runtime.v1.Exec
	49, // 19: runtime.v1.Event.dns:type_name -> runtime.v1.DNS
	50, // 20: runtime.v1.Event.file:type_name -> runtime.v1.File
	51, // 21: runtime.v1.Event.tuple:type_name -> runtime.v1.Tuple
	52, // 22: runtime.v1.Event.signature:type_name -> runtime.v1.SignatureEvent
	53, // 23: runtime.v1.Event.any:type_name -> runtime.v1.Any
	25, // 24: runtime.v1.ContainerStatsBatch.items:type_name -> runtime.v1.ContainerStats
	54, // 25: runtime.v1.ContainerStats.stats:type_name -> runtime.v1.Stats
	1,  // 26: runtime.v1.KubernetesDeltaItem.event:type_name -> runtime.v1.KubernetesDeltaItemEvent
	55, // 27: runtime.v1.KubernetesDeltaItem.object_created_at:type_name -> google.protobuf.Timestamp
	27, // 28: runtime.v1.KubernetesDeltaItem.object_containers:type_name -> runtime.v1.Container
	46, // 29: runtime.v1.KubernetesDeltaItem.object_labels:type_name -> runtime.v1.KubernetesDeltaItem.ObjectLabelsEntry
	47, // 30: runtime.v1.KubernetesDeltaItem.object_annotations:type_name -> runtime.v1.KubernetesDeltaItem.ObjectAnnotationsEntry
	55, // 31: runtime.v1.ImageMetadata.created_at:type_name -> google.protobuf.Timestamp
	33, // 32: runtime.v1.GetSyncStateResponse.images:type_name -> runtime.v1.ImagesSyncState
	34, // 33: runtime.v1.ImagesSyncState.images:type_name -> runtime.v1.Image
	2,  // 34: runtime.v1.Image.scan_status:type_name -> runtime.v1.ImageScanStatus
	34, // 35: runtime.v1.UpdateSyncStateRequest.images:type_name -> runtime.v1.Image
	40, // 36: runtime.v1.KubeBenchReport.controls:type_name -> runtime.v1.KubeBenchControls
	39, // 37: runtime.v1.KubeBenchReport.node:type_name -> runtime.v1.KubeBenchNode
	41, // 38: runtime.v1.KubeBenchControls.groups:type_name -> runtime.v1.KubeBenchGroup
	42, // 39: runtime.v1.KubeBenchGroup.checks:type_name -> runtime.v1.KubeBenchCheck
	45, // 40: runtime.v1.KubeLinterReport.checks:type_name -> runtime.v1.KubeLinterCheck
	3,  // 41: runtime.v1.RuntimeSecurityAgentAPI.GetConfiguration:input_type -> runtime.v1.GetConfigurationRequest
	21, // 42: runtime.v1.RuntimeSecurityAgentAPI.EventsWriteStream:input_type -> runtime.v1.Event
	56, // 43: runtime.v1.RuntimeSecurityAgentAPI.LogsWriteStream:input_type -> runtime.v1.LogEvent
	24, // 44: runtime.v1.RuntimeSecurityAgentAPI.ContainerStatsWriteStream:input_type -> runtime.v1.ContainerStatsBatch
	57, // 45: runtime.v1.RuntimeSecurityAgentAPI.NetflowWriteStream:input_type -> runtime.v1.Netflow
	31, // 46: runtime.v1.RuntimeSecurityAgentAPI.GetSyncState:input_type -> runtime.v1.GetSyncStateRequest
	35, // 47: runtime.v1.RuntimeSecurityAgentAPI.UpdateSyncState:input_type -> runtime.v1.UpdateSyncStateRequest
	26, // 48: runtime.v1.RuntimeSecurityAgentAPI.KubernetesDeltaIngest:input_type -> runtime.v1.KubernetesDeltaItem
	29, // 49: runtime.v1.RuntimeSecurityAgentAPI.ImageMetadataIngest:input_type -> runtime.v1.ImageMetadata
	37, // 50: runtime.v1.RuntimeSecurityAgentAPI.KubeBenchReportIngest:input_type -> runtime.v1.KubeBenchReport
	43, // 51: runtime.v1.RuntimeSecurityAgentAPI.KubeLinterReportIngest:input_type -> runtime.v1.KubeLinterReport
	4,  // 52: runtime.v1.RuntimeSecurityAgentAPI.GetConfiguration:output_type -> runtime.v1.GetConfigurationResponse
	22, // 53: runtime.v1.RuntimeSecurityAgentAPI.EventsWriteStream:output_type -> runtime.v1.WriteStreamResponse
	22, // 54: runtime.v1.RuntimeSecurityAgentAPI.LogsWriteStream:output_type -> runtime.v1.WriteStreamResponse
	22, // 55: runtime.v1.RuntimeSecurityAgentAPI.ContainerStatsWriteStream:output_type -> runtime.v1.WriteStreamResponse
	22, // 56: runtime.v1.RuntimeSecurityAgentAPI.NetflowWriteStream:output_type -> runtime.v1.WriteStreamResponse
	32, // 57: runtime.v1.RuntimeSecurityAgentAPI.GetSyncState:output_type -> runtime.v1.GetSyncStateResponse
	36, // 58: runtime.v1.RuntimeSecurityAgentAPI.UpdateSyncState:output_type -> runtime.v1.UpdateSyncStateResponse
	28, // 59: runtime.v1.RuntimeSecurityAgentAPI.KubernetesDeltaIngest:output_type -> runtime.v1.KubernetesDeltaIngestResponse
	30, // 60: runtime.v1.RuntimeSecurityAgentAPI.ImageMetadataIngest:output_type -> runtime.v1.ImageMetadataIngestResponse
	38, // 61: runtime.v1.RuntimeSecurityAgentAPI.KubeBenchReportIngest:output_type -> runtime.v1.KubeBenchReportIngestResponse
	44, // 62: runtime.v1.RuntimeSecurityAgentAPI.KubeLinterReportIngest:output_type -> runtime.v1.KubeLinterReportIngestResponse
	52, // [52:63] is the sub-list for method output_type
	41, // [41:52] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_api_v1_runtime_runtime_agent_api_proto_init() }
func file_api_v1_runtime_runtime_agent_api_proto_init() {
	if File_api_v1_runtime_runtime_agent_api_proto != nil {
		return
	}
	file_api_v1_runtime_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigurationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigurationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Configuration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControllerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CastaiControllerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageScanConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinterConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubeBenchConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeltaConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobsCleanupConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControllerAgentConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentStateControllerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SOCKS5DetectedSignatureConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignatureEngineConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CastaiConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnricherConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetflowConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerStatsBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubernetesDeltaItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Container); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubernetesDeltaIngestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageMetadataIngestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSyncStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSyncStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImagesSyncState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSyncStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSyncStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubeBenchReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubeBenchReportIngestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubeBenchNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubeBenchControls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubeBenchGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubeBenchCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubeLinterReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubeLinterReportIngestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_runtime_runtime_agent_api_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubeLinterCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v1_runtime_runtime_agent_api_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*GetConfigurationRequest_Controller)(nil),
		(*GetConfigurationRequest_Agent)(nil),
	}
	file_api_v1_runtime_runtime_agent_api_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*Event_Exec)(nil),
		(*Event_Dns)(nil),
		(*Event_File)(nil),
		(*Event_Tuple)(nil),
		(*Event_Signature)(nil),
		(*Event_Any)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_runtime_runtime_agent_api_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   45,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_runtime_runtime_agent_api_proto_goTypes,
		DependencyIndexes: file_api_v1_runtime_runtime_agent_api_proto_depIdxs,
		EnumInfos:         file_api_v1_runtime_runtime_agent_api_proto_enumTypes,
		MessageInfos:      file_api_v1_runtime_runtime_agent_api_proto_msgTypes,
	}.Build()
	File_api_v1_runtime_runtime_agent_api_proto = out.File
	file_api_v1_runtime_runtime_agent_api_proto_rawDesc = nil
	file_api_v1_runtime_runtime_agent_api_proto_goTypes = nil
	file_api_v1_runtime_runtime_agent_api_proto_depIdxs = nil
}
