// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: api/v1/runtime/common.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FlowDirection int32

const (
	FlowDirection_FLOW_UNKNOWN FlowDirection = 0
	FlowDirection_FLOW_INGRESS FlowDirection = 1
	FlowDirection_FLOW_EGRESS  FlowDirection = 2
)

// Enum value maps for FlowDirection.
var (
	FlowDirection_name = map[int32]string{
		0: "FLOW_UNKNOWN",
		1: "FLOW_INGRESS",
		2: "FLOW_EGRESS",
	}
	FlowDirection_value = map[string]int32{
		"FLOW_UNKNOWN": 0,
		"FLOW_INGRESS": 1,
		"FLOW_EGRESS":  2,
	}
)

func (x FlowDirection) Enum() *FlowDirection {
	p := new(FlowDirection)
	*p = x
	return p
}

func (x FlowDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FlowDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_runtime_common_proto_enumTypes[0].Descriptor()
}

func (FlowDirection) Type() protoreflect.EnumType {
	return &file_api_v1_runtime_common_proto_enumTypes[0]
}

func (x FlowDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FlowDirection.Descriptor instead.
func (FlowDirection) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{0}
}

type SignatureEventID int32

const (
	SignatureEventID_SIGNATURE_UNKNOWN                            SignatureEventID = 0
	SignatureEventID_SIGNATURE_STDIO_VIA_SOCKET                   SignatureEventID = 1
	SignatureEventID_SIGNATURE_TTY_DETECTED                       SignatureEventID = 2
	SignatureEventID_SIGNATURE_SOCKS5_DETECTED                    SignatureEventID = 3
	SignatureEventID_SIGNATURE_GIT_CLONE_DETECTED                 SignatureEventID = 4
	SignatureEventID_SIGNATURE_INGRESS_NIGHTMARE_EXPLOIT_DETECTED SignatureEventID = 5
)

// Enum value maps for SignatureEventID.
var (
	SignatureEventID_name = map[int32]string{
		0: "SIGNATURE_UNKNOWN",
		1: "SIGNATURE_STDIO_VIA_SOCKET",
		2: "SIGNATURE_TTY_DETECTED",
		3: "SIGNATURE_SOCKS5_DETECTED",
		4: "SIGNATURE_GIT_CLONE_DETECTED",
		5: "SIGNATURE_INGRESS_NIGHTMARE_EXPLOIT_DETECTED",
	}
	SignatureEventID_value = map[string]int32{
		"SIGNATURE_UNKNOWN":                            0,
		"SIGNATURE_STDIO_VIA_SOCKET":                   1,
		"SIGNATURE_TTY_DETECTED":                       2,
		"SIGNATURE_SOCKS5_DETECTED":                    3,
		"SIGNATURE_GIT_CLONE_DETECTED":                 4,
		"SIGNATURE_INGRESS_NIGHTMARE_EXPLOIT_DETECTED": 5,
	}
)

func (x SignatureEventID) Enum() *SignatureEventID {
	p := new(SignatureEventID)
	*p = x
	return p
}

func (x SignatureEventID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignatureEventID) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_runtime_common_proto_enumTypes[1].Descriptor()
}

func (SignatureEventID) Type() protoreflect.EnumType {
	return &file_api_v1_runtime_common_proto_enumTypes[1]
}

func (x SignatureEventID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignatureEventID.Descriptor instead.
func (SignatureEventID) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{1}
}

type SOCKS5Role int32

const (
	SOCKS5Role_SOCKS5_ROLE_UNKNOWN SOCKS5Role = 0
	SOCKS5Role_SOCKS5_ROLE_CLIENT  SOCKS5Role = 1
	SOCKS5Role_SOCKS5_ROLE_SERVER  SOCKS5Role = 2
)

// Enum value maps for SOCKS5Role.
var (
	SOCKS5Role_name = map[int32]string{
		0: "SOCKS5_ROLE_UNKNOWN",
		1: "SOCKS5_ROLE_CLIENT",
		2: "SOCKS5_ROLE_SERVER",
	}
	SOCKS5Role_value = map[string]int32{
		"SOCKS5_ROLE_UNKNOWN": 0,
		"SOCKS5_ROLE_CLIENT":  1,
		"SOCKS5_ROLE_SERVER":  2,
	}
)

func (x SOCKS5Role) Enum() *SOCKS5Role {
	p := new(SOCKS5Role)
	*p = x
	return p
}

func (x SOCKS5Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SOCKS5Role) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_runtime_common_proto_enumTypes[2].Descriptor()
}

func (SOCKS5Role) Type() protoreflect.EnumType {
	return &file_api_v1_runtime_common_proto_enumTypes[2]
}

func (x SOCKS5Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SOCKS5Role.Descriptor instead.
func (SOCKS5Role) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{2}
}

type SOCKS5AddressType int32

const (
	SOCKS5AddressType_SOCKS5_ADDRESS_TYPE_UNKNOWN     SOCKS5AddressType = 0
	SOCKS5AddressType_SOCKS5_ADDRESS_TYPE_IPv4        SOCKS5AddressType = 1
	SOCKS5AddressType_SOCKS5_ADDRESS_TYPE_DOMAIN_NAME SOCKS5AddressType = 3
	SOCKS5AddressType_SOCKS5_ADDRESS_TYPE_IPv6        SOCKS5AddressType = 4
)

// Enum value maps for SOCKS5AddressType.
var (
	SOCKS5AddressType_name = map[int32]string{
		0: "SOCKS5_ADDRESS_TYPE_UNKNOWN",
		1: "SOCKS5_ADDRESS_TYPE_IPv4",
		3: "SOCKS5_ADDRESS_TYPE_DOMAIN_NAME",
		4: "SOCKS5_ADDRESS_TYPE_IPv6",
	}
	SOCKS5AddressType_value = map[string]int32{
		"SOCKS5_ADDRESS_TYPE_UNKNOWN":     0,
		"SOCKS5_ADDRESS_TYPE_IPv4":        1,
		"SOCKS5_ADDRESS_TYPE_DOMAIN_NAME": 3,
		"SOCKS5_ADDRESS_TYPE_IPv6":        4,
	}
)

func (x SOCKS5AddressType) Enum() *SOCKS5AddressType {
	p := new(SOCKS5AddressType)
	*p = x
	return p
}

func (x SOCKS5AddressType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SOCKS5AddressType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_runtime_common_proto_enumTypes[3].Descriptor()
}

func (SOCKS5AddressType) Type() protoreflect.EnumType {
	return &file_api_v1_runtime_common_proto_enumTypes[3]
}

func (x SOCKS5AddressType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SOCKS5AddressType.Descriptor instead.
func (SOCKS5AddressType) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{3}
}

type GitCloneRemoteType int32

const (
	GitCloneRemoteType_GIT_REMOTE_UNKNOWN GitCloneRemoteType = 0
	GitCloneRemoteType_GIT_REMOTE_SSH     GitCloneRemoteType = 1
	GitCloneRemoteType_GIT_REMOTE_GIT     GitCloneRemoteType = 2
	GitCloneRemoteType_GIT_REMOTE_HTTP    GitCloneRemoteType = 3
	GitCloneRemoteType_GIT_REMOTE_HTTPS   GitCloneRemoteType = 4
	GitCloneRemoteType_GIT_REMOTE_FTP     GitCloneRemoteType = 5
	GitCloneRemoteType_GIT_REMOTE_FTPS    GitCloneRemoteType = 6
	GitCloneRemoteType_GIT_REMOTE_LOCAL   GitCloneRemoteType = 7
)

// Enum value maps for GitCloneRemoteType.
var (
	GitCloneRemoteType_name = map[int32]string{
		0: "GIT_REMOTE_UNKNOWN",
		1: "GIT_REMOTE_SSH",
		2: "GIT_REMOTE_GIT",
		3: "GIT_REMOTE_HTTP",
		4: "GIT_REMOTE_HTTPS",
		5: "GIT_REMOTE_FTP",
		6: "GIT_REMOTE_FTPS",
		7: "GIT_REMOTE_LOCAL",
	}
	GitCloneRemoteType_value = map[string]int32{
		"GIT_REMOTE_UNKNOWN": 0,
		"GIT_REMOTE_SSH":     1,
		"GIT_REMOTE_GIT":     2,
		"GIT_REMOTE_HTTP":    3,
		"GIT_REMOTE_HTTPS":   4,
		"GIT_REMOTE_FTP":     5,
		"GIT_REMOTE_FTPS":    6,
		"GIT_REMOTE_LOCAL":   7,
	}
)

func (x GitCloneRemoteType) Enum() *GitCloneRemoteType {
	p := new(GitCloneRemoteType)
	*p = x
	return p
}

func (x GitCloneRemoteType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GitCloneRemoteType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_runtime_common_proto_enumTypes[4].Descriptor()
}

func (GitCloneRemoteType) Type() protoreflect.EnumType {
	return &file_api_v1_runtime_common_proto_enumTypes[4]
}

func (x GitCloneRemoteType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GitCloneRemoteType.Descriptor instead.
func (GitCloneRemoteType) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{4}
}

type NetflowProtocol int32

const (
	NetflowProtocol_NETFLOW_PROTOCOL_UNKNOWN NetflowProtocol = 0
	NetflowProtocol_NETFLOW_PROTOCOL_TCP     NetflowProtocol = 1
	NetflowProtocol_NETFLOW_PROTOCOL_UDP     NetflowProtocol = 2
)

// Enum value maps for NetflowProtocol.
var (
	NetflowProtocol_name = map[int32]string{
		0: "NETFLOW_PROTOCOL_UNKNOWN",
		1: "NETFLOW_PROTOCOL_TCP",
		2: "NETFLOW_PROTOCOL_UDP",
	}
	NetflowProtocol_value = map[string]int32{
		"NETFLOW_PROTOCOL_UNKNOWN": 0,
		"NETFLOW_PROTOCOL_TCP":     1,
		"NETFLOW_PROTOCOL_UDP":     2,
	}
)

func (x NetflowProtocol) Enum() *NetflowProtocol {
	p := new(NetflowProtocol)
	*p = x
	return p
}

func (x NetflowProtocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NetflowProtocol) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_runtime_common_proto_enumTypes[5].Descriptor()
}

func (NetflowProtocol) Type() protoreflect.EnumType {
	return &file_api_v1_runtime_common_proto_enumTypes[5]
}

func (x NetflowProtocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NetflowProtocol.Descriptor instead.
func (NetflowProtocol) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{5}
}

type Any struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       uint32                 `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Syscall       uint32                 `protobuf:"varint,2,opt,name=syscall,proto3" json:"syscall,omitempty"`
	Data          []byte                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Any) Reset() {
	*x = Any{}
	mi := &file_api_v1_runtime_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Any) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Any) ProtoMessage() {}

func (x *Any) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Any.ProtoReflect.Descriptor instead.
func (*Any) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{0}
}

func (x *Any) GetEventId() uint32 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *Any) GetSyscall() uint32 {
	if x != nil {
		return x.Syscall
	}
	return 0
}

func (x *Any) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Exec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Args          []string               `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	HashSha256    []byte                 `protobuf:"bytes,3,opt,name=hash_sha256,json=hashSha256,proto3" json:"hash_sha256,omitempty"`
	Flags         uint32                 `protobuf:"varint,4,opt,name=flags,proto3" json:"flags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Exec) Reset() {
	*x = Exec{}
	mi := &file_api_v1_runtime_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Exec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exec) ProtoMessage() {}

func (x *Exec) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Exec.ProtoReflect.Descriptor instead.
func (*Exec) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{1}
}

func (x *Exec) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Exec) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Exec) GetHashSha256() []byte {
	if x != nil {
		return x.HashSha256
	}
	return nil
}

func (x *Exec) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type ProcessFork struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessFork) Reset() {
	*x = ProcessFork{}
	mi := &file_api_v1_runtime_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessFork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessFork) ProtoMessage() {}

func (x *ProcessFork) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessFork.ProtoReflect.Descriptor instead.
func (*ProcessFork) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{2}
}

type ProcessExit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExitCode      int64                  `protobuf:"varint,1,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessExit) Reset() {
	*x = ProcessExit{}
	mi := &file_api_v1_runtime_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessExit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessExit) ProtoMessage() {}

func (x *ProcessExit) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessExit.ProtoReflect.Descriptor instead.
func (*ProcessExit) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{3}
}

func (x *ProcessExit) GetExitCode() int64 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

type File struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	HashSha256    []byte                 `protobuf:"bytes,2,opt,name=hash_sha256,json=hashSha256,proto3" json:"hash_sha256,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_api_v1_runtime_common_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_common_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{4}
}

func (x *File) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *File) GetHashSha256() []byte {
	if x != nil {
		return x.HashSha256
	}
	return nil
}

type Tuple struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SrcIp         []byte                 `protobuf:"bytes,1,opt,name=src_ip,json=srcIp,proto3" json:"src_ip,omitempty"`
	DstIp         []byte                 `protobuf:"bytes,2,opt,name=dst_ip,json=dstIp,proto3" json:"dst_ip,omitempty"`
	SrcPort       uint32                 `protobuf:"varint,3,opt,name=src_port,json=srcPort,proto3" json:"src_port,omitempty"`
	DstPort       uint32                 `protobuf:"varint,4,opt,name=dst_port,json=dstPort,proto3" json:"dst_port,omitempty"`
	DnsQuestion   string                 `protobuf:"bytes,5,opt,name=dns_question,json=dnsQuestion,proto3" json:"dns_question,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tuple) Reset() {
	*x = Tuple{}
	mi := &file_api_v1_runtime_common_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tuple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tuple) ProtoMessage() {}

func (x *Tuple) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_common_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tuple.ProtoReflect.Descriptor instead.
func (*Tuple) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{5}
}

func (x *Tuple) GetSrcIp() []byte {
	if x != nil {
		return x.SrcIp
	}
	return nil
}

func (x *Tuple) GetDstIp() []byte {
	if x != nil {
		return x.DstIp
	}
	return nil
}

func (x *Tuple) GetSrcPort() uint32 {
	if x != nil {
		return x.SrcPort
	}
	return 0
}

func (x *Tuple) GetDstPort() uint32 {
	if x != nil {
		return x.DstPort
	}
	return 0
}

func (x *Tuple) GetDnsQuestion() string {
	if x != nil {
		return x.DnsQuestion
	}
	return ""
}

type DNS struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	DNSQuestionDomain string                 `protobuf:"bytes,1,opt,name=DNSQuestionDomain,proto3" json:"DNSQuestionDomain,omitempty"`
	Answers           []*DNSAnswers          `protobuf:"bytes,2,rep,name=answers,proto3" json:"answers,omitempty"`
	FlowDirection     FlowDirection          `protobuf:"varint,3,opt,name=flow_direction,json=flowDirection,proto3,enum=runtime.v1.FlowDirection" json:"flow_direction,omitempty"`
	Tuple             *Tuple                 `protobuf:"bytes,4,opt,name=tuple,proto3" json:"tuple,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DNS) Reset() {
	*x = DNS{}
	mi := &file_api_v1_runtime_common_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DNS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNS) ProtoMessage() {}

func (x *DNS) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_common_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNS.ProtoReflect.Descriptor instead.
func (*DNS) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{6}
}

func (x *DNS) GetDNSQuestionDomain() string {
	if x != nil {
		return x.DNSQuestionDomain
	}
	return ""
}

func (x *DNS) GetAnswers() []*DNSAnswers {
	if x != nil {
		return x.Answers
	}
	return nil
}

func (x *DNS) GetFlowDirection() FlowDirection {
	if x != nil {
		return x.FlowDirection
	}
	return FlowDirection_FLOW_UNKNOWN
}

func (x *DNS) GetTuple() *Tuple {
	if x != nil {
		return x.Tuple
	}
	return nil
}

type DNSAnswers struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          uint32                 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Class         uint32                 `protobuf:"varint,2,opt,name=class,proto3" json:"class,omitempty"`
	Ttl           uint32                 `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Ip            []byte                 `protobuf:"bytes,5,opt,name=ip,proto3" json:"ip,omitempty"`
	Cname         string                 `protobuf:"bytes,6,opt,name=cname,proto3" json:"cname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DNSAnswers) Reset() {
	*x = DNSAnswers{}
	mi := &file_api_v1_runtime_common_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DNSAnswers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNSAnswers) ProtoMessage() {}

func (x *DNSAnswers) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_common_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNSAnswers.ProtoReflect.Descriptor instead.
func (*DNSAnswers) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{7}
}

func (x *DNSAnswers) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *DNSAnswers) GetClass() uint32 {
	if x != nil {
		return x.Class
	}
	return 0
}

func (x *DNSAnswers) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *DNSAnswers) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DNSAnswers) GetIp() []byte {
	if x != nil {
		return x.Ip
	}
	return nil
}

func (x *DNSAnswers) GetCname() string {
	if x != nil {
		return x.Cname
	}
	return ""
}

type LogEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Level         int32                  `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEvent) Reset() {
	*x = LogEvent{}
	mi := &file_api_v1_runtime_common_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEvent) ProtoMessage() {}

func (x *LogEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_common_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEvent.ProtoReflect.Descriptor instead.
func (*LogEvent) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{8}
}

func (x *LogEvent) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *LogEvent) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type SignatureEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *SignatureMetadata     `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Finding       *SignatureFinding      `protobuf:"bytes,2,opt,name=finding,proto3" json:"finding,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignatureEvent) Reset() {
	*x = SignatureEvent{}
	mi := &file_api_v1_runtime_common_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignatureEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureEvent) ProtoMessage() {}

func (x *SignatureEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_common_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureEvent.ProtoReflect.Descriptor instead.
func (*SignatureEvent) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{9}
}

func (x *SignatureEvent) GetMetadata() *SignatureMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SignatureEvent) GetFinding() *SignatureFinding {
	if x != nil {
		return x.Finding
	}
	return nil
}

type SignatureMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            SignatureEventID       `protobuf:"varint,1,opt,name=id,proto3,enum=runtime.v1.SignatureEventID" json:"id,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignatureMetadata) Reset() {
	*x = SignatureMetadata{}
	mi := &file_api_v1_runtime_common_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignatureMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureMetadata) ProtoMessage() {}

func (x *SignatureMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_common_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureMetadata.ProtoReflect.Descriptor instead.
func (*SignatureMetadata) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{10}
}

func (x *SignatureMetadata) GetId() SignatureEventID {
	if x != nil {
		return x.Id
	}
	return SignatureEventID_SIGNATURE_UNKNOWN
}

func (x *SignatureMetadata) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type SignatureFinding struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*SignatureFinding_StdioViaSocket
	//	*SignatureFinding_TtyDetected
	//	*SignatureFinding_Socks5Detected
	//	*SignatureFinding_GitCloneDetected
	//	*SignatureFinding_IngressNightmareExploitDetected
	Data          isSignatureFinding_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignatureFinding) Reset() {
	*x = SignatureFinding{}
	mi := &file_api_v1_runtime_common_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignatureFinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureFinding) ProtoMessage() {}

func (x *SignatureFinding) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_common_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureFinding.ProtoReflect.Descriptor instead.
func (*SignatureFinding) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{11}
}

func (x *SignatureFinding) GetData() isSignatureFinding_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SignatureFinding) GetStdioViaSocket() *StdioViaSocketFinding {
	if x != nil {
		if x, ok := x.Data.(*SignatureFinding_StdioViaSocket); ok {
			return x.StdioViaSocket
		}
	}
	return nil
}

func (x *SignatureFinding) GetTtyDetected() *TtyDetectedFinding {
	if x != nil {
		if x, ok := x.Data.(*SignatureFinding_TtyDetected); ok {
			return x.TtyDetected
		}
	}
	return nil
}

func (x *SignatureFinding) GetSocks5Detected() *SOCKS5DetectedFinding {
	if x != nil {
		if x, ok := x.Data.(*SignatureFinding_Socks5Detected); ok {
			return x.Socks5Detected
		}
	}
	return nil
}

func (x *SignatureFinding) GetGitCloneDetected() *GitCloneDetectedFinding {
	if x != nil {
		if x, ok := x.Data.(*SignatureFinding_GitCloneDetected); ok {
			return x.GitCloneDetected
		}
	}
	return nil
}

func (x *SignatureFinding) GetIngressNightmareExploitDetected() *IngressNightmareExploitDetectedFinding {
	if x != nil {
		if x, ok := x.Data.(*SignatureFinding_IngressNightmareExploitDetected); ok {
			return x.IngressNightmareExploitDetected
		}
	}
	return nil
}

type isSignatureFinding_Data interface {
	isSignatureFinding_Data()
}

type SignatureFinding_StdioViaSocket struct {
	StdioViaSocket *StdioViaSocketFinding `protobuf:"bytes,1,opt,name=stdio_via_socket,json=stdioViaSocket,proto3,oneof"`
}

type SignatureFinding_TtyDetected struct {
	TtyDetected *TtyDetectedFinding `protobuf:"bytes,2,opt,name=tty_detected,json=ttyDetected,proto3,oneof"`
}

type SignatureFinding_Socks5Detected struct {
	Socks5Detected *SOCKS5DetectedFinding `protobuf:"bytes,3,opt,name=socks5_detected,json=socks5Detected,proto3,oneof"`
}

type SignatureFinding_GitCloneDetected struct {
	GitCloneDetected *GitCloneDetectedFinding `protobuf:"bytes,4,opt,name=git_clone_detected,json=gitCloneDetected,proto3,oneof"`
}

type SignatureFinding_IngressNightmareExploitDetected struct {
	IngressNightmareExploitDetected *IngressNightmareExploitDetectedFinding `protobuf:"bytes,5,opt,name=ingress_nightmare_exploit_detected,json=ingressNightmareExploitDetected,proto3,oneof"`
}

func (*SignatureFinding_StdioViaSocket) isSignatureFinding_Data() {}

func (*SignatureFinding_TtyDetected) isSignatureFinding_Data() {}

func (*SignatureFinding_Socks5Detected) isSignatureFinding_Data() {}

func (*SignatureFinding_GitCloneDetected) isSignatureFinding_Data() {}

func (*SignatureFinding_IngressNightmareExploitDetected) isSignatureFinding_Data() {}

type StdioViaSocketFinding struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ip            []byte                 `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port          uint32                 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Socketfd      int32                  `protobuf:"varint,3,opt,name=socketfd,proto3" json:"socketfd,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StdioViaSocketFinding) Reset() {
	*x = StdioViaSocketFinding{}
	mi := &file_api_v1_runtime_common_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StdioViaSocketFinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StdioViaSocketFinding) ProtoMessage() {}

func (x *StdioViaSocketFinding) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_common_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StdioViaSocketFinding.ProtoReflect.Descriptor instead.
func (*StdioViaSocketFinding) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{12}
}

func (x *StdioViaSocketFinding) GetIp() []byte {
	if x != nil {
		return x.Ip
	}
	return nil
}

func (x *StdioViaSocketFinding) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *StdioViaSocketFinding) GetSocketfd() int32 {
	if x != nil {
		return x.Socketfd
	}
	return 0
}

type TtyDetectedFinding struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TtyDetectedFinding) Reset() {
	*x = TtyDetectedFinding{}
	mi := &file_api_v1_runtime_common_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TtyDetectedFinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TtyDetectedFinding) ProtoMessage() {}

func (x *TtyDetectedFinding) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_common_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TtyDetectedFinding.ProtoReflect.Descriptor instead.
func (*TtyDetectedFinding) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{13}
}

func (x *TtyDetectedFinding) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type SOCKS5DetectedFinding struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Role          SOCKS5Role             `protobuf:"varint,1,opt,name=role,proto3,enum=runtime.v1.SOCKS5Role" json:"role,omitempty"`
	FlowDirection FlowDirection          `protobuf:"varint,2,opt,name=flow_direction,json=flowDirection,proto3,enum=runtime.v1.FlowDirection" json:"flow_direction,omitempty"`
	CmdOrReply    uint32                 `protobuf:"varint,3,opt,name=cmd_or_reply,json=cmdOrReply,proto3" json:"cmd_or_reply,omitempty"`
	AddressType   SOCKS5AddressType      `protobuf:"varint,4,opt,name=address_type,json=addressType,proto3,enum=runtime.v1.SOCKS5AddressType" json:"address_type,omitempty"`
	Address       []byte                 `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	Port          uint32                 `protobuf:"varint,6,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SOCKS5DetectedFinding) Reset() {
	*x = SOCKS5DetectedFinding{}
	mi := &file_api_v1_runtime_common_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SOCKS5DetectedFinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SOCKS5DetectedFinding) ProtoMessage() {}

func (x *SOCKS5DetectedFinding) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_common_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SOCKS5DetectedFinding.ProtoReflect.Descriptor instead.
func (*SOCKS5DetectedFinding) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{14}
}

func (x *SOCKS5DetectedFinding) GetRole() SOCKS5Role {
	if x != nil {
		return x.Role
	}
	return SOCKS5Role_SOCKS5_ROLE_UNKNOWN
}

func (x *SOCKS5DetectedFinding) GetFlowDirection() FlowDirection {
	if x != nil {
		return x.FlowDirection
	}
	return FlowDirection_FLOW_UNKNOWN
}

func (x *SOCKS5DetectedFinding) GetCmdOrReply() uint32 {
	if x != nil {
		return x.CmdOrReply
	}
	return 0
}

func (x *SOCKS5DetectedFinding) GetAddressType() SOCKS5AddressType {
	if x != nil {
		return x.AddressType
	}
	return SOCKS5AddressType_SOCKS5_ADDRESS_TYPE_UNKNOWN
}

func (x *SOCKS5DetectedFinding) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *SOCKS5DetectedFinding) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type SSHData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FlowDirection FlowDirection          `protobuf:"varint,1,opt,name=flow_direction,json=flowDirection,proto3,enum=runtime.v1.FlowDirection" json:"flow_direction,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Comments      string                 `protobuf:"bytes,3,opt,name=comments,proto3" json:"comments,omitempty"`
	Tuple         *Tuple                 `protobuf:"bytes,4,opt,name=tuple,proto3" json:"tuple,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SSHData) Reset() {
	*x = SSHData{}
	mi := &file_api_v1_runtime_common_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SSHData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSHData) ProtoMessage() {}

func (x *SSHData) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_common_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSHData.ProtoReflect.Descriptor instead.
func (*SSHData) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{15}
}

func (x *SSHData) GetFlowDirection() FlowDirection {
	if x != nil {
		return x.FlowDirection
	}
	return FlowDirection_FLOW_UNKNOWN
}

func (x *SSHData) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SSHData) GetComments() string {
	if x != nil {
		return x.Comments
	}
	return ""
}

func (x *SSHData) GetTuple() *Tuple {
	if x != nil {
		return x.Tuple
	}
	return nil
}

type GitCloneDetectedFinding struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          GitCloneRemoteType     `protobuf:"varint,1,opt,name=type,proto3,enum=runtime.v1.GitCloneRemoteType" json:"type,omitempty"`
	FullRepo      string                 `protobuf:"bytes,2,opt,name=full_repo,json=fullRepo,proto3" json:"full_repo,omitempty"`
	Server        string                 `protobuf:"bytes,3,opt,name=server,proto3" json:"server,omitempty"`
	RepoPath      string                 `protobuf:"bytes,4,opt,name=repo_path,json=repoPath,proto3" json:"repo_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GitCloneDetectedFinding) Reset() {
	*x = GitCloneDetectedFinding{}
	mi := &file_api_v1_runtime_common_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GitCloneDetectedFinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitCloneDetectedFinding) ProtoMessage() {}

func (x *GitCloneDetectedFinding) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_common_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitCloneDetectedFinding.ProtoReflect.Descriptor instead.
func (*GitCloneDetectedFinding) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{16}
}

func (x *GitCloneDetectedFinding) GetType() GitCloneRemoteType {
	if x != nil {
		return x.Type
	}
	return GitCloneRemoteType_GIT_REMOTE_UNKNOWN
}

func (x *GitCloneDetectedFinding) GetFullRepo() string {
	if x != nil {
		return x.FullRepo
	}
	return ""
}

func (x *GitCloneDetectedFinding) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *GitCloneDetectedFinding) GetRepoPath() string {
	if x != nil {
		return x.RepoPath
	}
	return ""
}

type IngressNightmareExploitDetectedFinding struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IngressNightmareExploitDetectedFinding) Reset() {
	*x = IngressNightmareExploitDetectedFinding{}
	mi := &file_api_v1_runtime_common_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngressNightmareExploitDetectedFinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngressNightmareExploitDetectedFinding) ProtoMessage() {}

func (x *IngressNightmareExploitDetectedFinding) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_common_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngressNightmareExploitDetectedFinding.ProtoReflect.Descriptor instead.
func (*IngressNightmareExploitDetectedFinding) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{17}
}

type Netflow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     uint64                 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Stored as unix timestamp in nanoseconds.
	ProcessName   string                 `protobuf:"bytes,2,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	Namespace     string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	PodName       string                 `protobuf:"bytes,4,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	ContainerName string                 `protobuf:"bytes,5,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
	WorkloadName  string                 `protobuf:"bytes,6,opt,name=workload_name,json=workloadName,proto3" json:"workload_name,omitempty"`
	WorkloadKind  string                 `protobuf:"bytes,7,opt,name=workload_kind,json=workloadKind,proto3" json:"workload_kind,omitempty"`
	Zone          string                 `protobuf:"bytes,8,opt,name=zone,proto3" json:"zone,omitempty"`
	NodeName      string                 `protobuf:"bytes,13,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	Addr          []byte                 `protobuf:"bytes,9,opt,name=addr,proto3" json:"addr,omitempty"`
	Port          uint32                 `protobuf:"varint,10,opt,name=port,proto3" json:"port,omitempty"`
	Protocol      NetflowProtocol        `protobuf:"varint,11,opt,name=protocol,proto3,enum=runtime.v1.NetflowProtocol" json:"protocol,omitempty"`
	Destinations  []*NetflowDestination  `protobuf:"bytes,12,rep,name=destinations,proto3" json:"destinations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Netflow) Reset() {
	*x = Netflow{}
	mi := &file_api_v1_runtime_common_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Netflow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Netflow) ProtoMessage() {}

func (x *Netflow) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_common_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Netflow.ProtoReflect.Descriptor instead.
func (*Netflow) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{18}
}

func (x *Netflow) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Netflow) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *Netflow) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Netflow) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *Netflow) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *Netflow) GetWorkloadName() string {
	if x != nil {
		return x.WorkloadName
	}
	return ""
}

func (x *Netflow) GetWorkloadKind() string {
	if x != nil {
		return x.WorkloadKind
	}
	return ""
}

func (x *Netflow) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *Netflow) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *Netflow) GetAddr() []byte {
	if x != nil {
		return x.Addr
	}
	return nil
}

func (x *Netflow) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Netflow) GetProtocol() NetflowProtocol {
	if x != nil {
		return x.Protocol
	}
	return NetflowProtocol_NETFLOW_PROTOCOL_UNKNOWN
}

func (x *Netflow) GetDestinations() []*NetflowDestination {
	if x != nil {
		return x.Destinations
	}
	return nil
}

type NetflowDestination struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	PodName       string                 `protobuf:"bytes,2,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	WorkloadName  string                 `protobuf:"bytes,3,opt,name=workload_name,json=workloadName,proto3" json:"workload_name,omitempty"`
	WorkloadKind  string                 `protobuf:"bytes,4,opt,name=workload_kind,json=workloadKind,proto3" json:"workload_kind,omitempty"`
	Zone          string                 `protobuf:"bytes,5,opt,name=zone,proto3" json:"zone,omitempty"`
	DnsQuestion   string                 `protobuf:"bytes,6,opt,name=dns_question,json=dnsQuestion,proto3" json:"dns_question,omitempty"`
	NodeName      string                 `protobuf:"bytes,14,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	Addr          []byte                 `protobuf:"bytes,8,opt,name=addr,proto3" json:"addr,omitempty"`
	Port          uint32                 `protobuf:"varint,9,opt,name=port,proto3" json:"port,omitempty"`
	TxBytes       uint64                 `protobuf:"varint,10,opt,name=tx_bytes,json=txBytes,proto3" json:"tx_bytes,omitempty"`
	RxBytes       uint64                 `protobuf:"varint,11,opt,name=rx_bytes,json=rxBytes,proto3" json:"rx_bytes,omitempty"`
	TxPackets     uint64                 `protobuf:"varint,12,opt,name=tx_packets,json=txPackets,proto3" json:"tx_packets,omitempty"`
	RxPackets     uint64                 `protobuf:"varint,13,opt,name=rx_packets,json=rxPackets,proto3" json:"rx_packets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetflowDestination) Reset() {
	*x = NetflowDestination{}
	mi := &file_api_v1_runtime_common_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetflowDestination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetflowDestination) ProtoMessage() {}

func (x *NetflowDestination) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_common_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetflowDestination.ProtoReflect.Descriptor instead.
func (*NetflowDestination) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{19}
}

func (x *NetflowDestination) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *NetflowDestination) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *NetflowDestination) GetWorkloadName() string {
	if x != nil {
		return x.WorkloadName
	}
	return ""
}

func (x *NetflowDestination) GetWorkloadKind() string {
	if x != nil {
		return x.WorkloadKind
	}
	return ""
}

func (x *NetflowDestination) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *NetflowDestination) GetDnsQuestion() string {
	if x != nil {
		return x.DnsQuestion
	}
	return ""
}

func (x *NetflowDestination) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *NetflowDestination) GetAddr() []byte {
	if x != nil {
		return x.Addr
	}
	return nil
}

func (x *NetflowDestination) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *NetflowDestination) GetTxBytes() uint64 {
	if x != nil {
		return x.TxBytes
	}
	return 0
}

func (x *NetflowDestination) GetRxBytes() uint64 {
	if x != nil {
		return x.RxBytes
	}
	return 0
}

func (x *NetflowDestination) GetTxPackets() uint64 {
	if x != nil {
		return x.TxPackets
	}
	return 0
}

func (x *NetflowDestination) GetRxPackets() uint64 {
	if x != nil {
		return x.RxPackets
	}
	return 0
}

type PSIData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         uint64                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PSIData) Reset() {
	*x = PSIData{}
	mi := &file_api_v1_runtime_common_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PSIData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PSIData) ProtoMessage() {}

func (x *PSIData) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_common_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PSIData.ProtoReflect.Descriptor instead.
func (*PSIData) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{20}
}

func (x *PSIData) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type PSIStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Some          *PSIData               `protobuf:"bytes,1,opt,name=some,proto3" json:"some,omitempty"`
	Full          *PSIData               `protobuf:"bytes,2,opt,name=full,proto3" json:"full,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PSIStats) Reset() {
	*x = PSIStats{}
	mi := &file_api_v1_runtime_common_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PSIStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PSIStats) ProtoMessage() {}

func (x *PSIStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_common_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PSIStats.ProtoReflect.Descriptor instead.
func (*PSIStats) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{21}
}

func (x *PSIStats) GetSome() *PSIData {
	if x != nil {
		return x.Some
	}
	return nil
}

func (x *PSIStats) GetFull() *PSIData {
	if x != nil {
		return x.Full
	}
	return nil
}

type CpuStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Total CPU time consumed.
	// Units: nanoseconds.
	TotalUsage uint64 `protobuf:"varint,1,opt,name=total_usage,json=totalUsage,proto3" json:"total_usage,omitempty"`
	// Time spent by tasks of the cgroup in kernel mode.
	// Units: nanoseconds.
	UsageInKernelmode uint64 `protobuf:"varint,2,opt,name=usage_in_kernelmode,json=usageInKernelmode,proto3" json:"usage_in_kernelmode,omitempty"`
	// Time spent by tasks of the cgroup in user mode.
	// Units: nanoseconds.
	UsageInUsermode uint64 `protobuf:"varint,3,opt,name=usage_in_usermode,json=usageInUsermode,proto3" json:"usage_in_usermode,omitempty"`
	// Number of periods when the container hit its throttling limit.
	ThrottledPeriods uint64 `protobuf:"varint,4,opt,name=throttled_periods,json=throttledPeriods,proto3" json:"throttled_periods,omitempty"`
	// Aggregate time the container was throttled for in nanoseconds.
	ThrottledTime uint64    `protobuf:"varint,5,opt,name=throttled_time,json=throttledTime,proto3" json:"throttled_time,omitempty"`
	Psi           *PSIStats `protobuf:"bytes,6,opt,name=psi,proto3" json:"psi,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CpuStats) Reset() {
	*x = CpuStats{}
	mi := &file_api_v1_runtime_common_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CpuStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CpuStats) ProtoMessage() {}

func (x *CpuStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_common_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CpuStats.ProtoReflect.Descriptor instead.
func (*CpuStats) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{22}
}

func (x *CpuStats) GetTotalUsage() uint64 {
	if x != nil {
		return x.TotalUsage
	}
	return 0
}

func (x *CpuStats) GetUsageInKernelmode() uint64 {
	if x != nil {
		return x.UsageInKernelmode
	}
	return 0
}

func (x *CpuStats) GetUsageInUsermode() uint64 {
	if x != nil {
		return x.UsageInUsermode
	}
	return 0
}

func (x *CpuStats) GetThrottledPeriods() uint64 {
	if x != nil {
		return x.ThrottledPeriods
	}
	return 0
}

func (x *CpuStats) GetThrottledTime() uint64 {
	if x != nil {
		return x.ThrottledTime
	}
	return 0
}

func (x *CpuStats) GetPsi() *PSIStats {
	if x != nil {
		return x.Psi
	}
	return nil
}

type MemoryData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Usage         uint64                 `protobuf:"varint,1,opt,name=usage,proto3" json:"usage,omitempty"`
	Limit         uint64                 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemoryData) Reset() {
	*x = MemoryData{}
	mi := &file_api_v1_runtime_common_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryData) ProtoMessage() {}

func (x *MemoryData) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_common_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryData.ProtoReflect.Descriptor instead.
func (*MemoryData) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{23}
}

func (x *MemoryData) GetUsage() uint64 {
	if x != nil {
		return x.Usage
	}
	return 0
}

func (x *MemoryData) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type MemoryStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cache         uint64                 `protobuf:"varint,1,opt,name=cache,proto3" json:"cache,omitempty"`
	Usage         *MemoryData            `protobuf:"bytes,2,opt,name=usage,proto3" json:"usage,omitempty"`
	SwapOnlyUsage *MemoryData            `protobuf:"bytes,4,opt,name=swap_only_usage,json=swapOnlyUsage,proto3" json:"swap_only_usage,omitempty"`
	Psi           *PSIStats              `protobuf:"bytes,8,opt,name=psi,proto3" json:"psi,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemoryStats) Reset() {
	*x = MemoryStats{}
	mi := &file_api_v1_runtime_common_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryStats) ProtoMessage() {}

func (x *MemoryStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_common_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryStats.ProtoReflect.Descriptor instead.
func (*MemoryStats) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{24}
}

func (x *MemoryStats) GetCache() uint64 {
	if x != nil {
		return x.Cache
	}
	return 0
}

func (x *MemoryStats) GetUsage() *MemoryData {
	if x != nil {
		return x.Usage
	}
	return nil
}

func (x *MemoryStats) GetSwapOnlyUsage() *MemoryData {
	if x != nil {
		return x.SwapOnlyUsage
	}
	return nil
}

func (x *MemoryStats) GetPsi() *PSIStats {
	if x != nil {
		return x.Psi
	}
	return nil
}

type PidsStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// number of pids in the cgroup
	Current uint64 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	// active pids hard limit
	Limit         uint64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PidsStats) Reset() {
	*x = PidsStats{}
	mi := &file_api_v1_runtime_common_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PidsStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PidsStats) ProtoMessage() {}

func (x *PidsStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_common_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PidsStats.ProtoReflect.Descriptor instead.
func (*PidsStats) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{25}
}

func (x *PidsStats) GetCurrent() uint64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *PidsStats) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type IOStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Psi           *PSIStats              `protobuf:"bytes,1,opt,name=psi,proto3" json:"psi,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IOStats) Reset() {
	*x = IOStats{}
	mi := &file_api_v1_runtime_common_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IOStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IOStats) ProtoMessage() {}

func (x *IOStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_runtime_common_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IOStats.ProtoReflect.Descriptor instead.
func (*IOStats) Descriptor() ([]byte, []int) {
	return file_api_v1_runtime_common_proto_rawDescGZIP(), []int{26}
}

func (x *IOStats) GetPsi() *PSIStats {
	if x != nil {
		return x.Psi
	}
	return nil
}

var File_api_v1_runtime_common_proto protoreflect.FileDescriptor

const file_api_v1_runtime_common_proto_rawDesc = "" +
	"\n" +
	"\x1bapi/v1/runtime/common.proto\x12\n" +
	"runtime.v1\"N\n" +
	"\x03Any\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\rR\aeventId\x12\x18\n" +
	"\asyscall\x18\x02 \x01(\rR\asyscall\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\"e\n" +
	"\x04Exec\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x12\n" +
	"\x04args\x18\x02 \x03(\tR\x04args\x12\x1f\n" +
	"\vhash_sha256\x18\x03 \x01(\fR\n" +
	"hashSha256\x12\x14\n" +
	"\x05flags\x18\x04 \x01(\rR\x05flags\"\r\n" +
	"\vProcessFork\"*\n" +
	"\vProcessExit\x12\x1b\n" +
	"\texit_code\x18\x01 \x01(\x03R\bexitCode\";\n" +
	"\x04File\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x1f\n" +
	"\vhash_sha256\x18\x02 \x01(\fR\n" +
	"hashSha256\"\x8e\x01\n" +
	"\x05Tuple\x12\x15\n" +
	"\x06src_ip\x18\x01 \x01(\fR\x05srcIp\x12\x15\n" +
	"\x06dst_ip\x18\x02 \x01(\fR\x05dstIp\x12\x19\n" +
	"\bsrc_port\x18\x03 \x01(\rR\asrcPort\x12\x19\n" +
	"\bdst_port\x18\x04 \x01(\rR\adstPort\x12!\n" +
	"\fdns_question\x18\x05 \x01(\tR\vdnsQuestion\"\xd0\x01\n" +
	"\x03DNS\x12,\n" +
	"\x11DNSQuestionDomain\x18\x01 \x01(\tR\x11DNSQuestionDomain\x120\n" +
	"\aanswers\x18\x02 \x03(\v2\x16.runtime.v1.DNSAnswersR\aanswers\x12@\n" +
	"\x0eflow_direction\x18\x03 \x01(\x0e2\x19.runtime.v1.FlowDirectionR\rflowDirection\x12'\n" +
	"\x05tuple\x18\x04 \x01(\v2\x11.runtime.v1.TupleR\x05tuple\"\x82\x01\n" +
	"\n" +
	"DNSAnswers\x12\x12\n" +
	"\x04type\x18\x01 \x01(\rR\x04type\x12\x14\n" +
	"\x05class\x18\x02 \x01(\rR\x05class\x12\x10\n" +
	"\x03ttl\x18\x03 \x01(\rR\x03ttl\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12\x0e\n" +
	"\x02ip\x18\x05 \x01(\fR\x02ip\x12\x14\n" +
	"\x05cname\x18\x06 \x01(\tR\x05cname\"2\n" +
	"\bLogEvent\x12\x14\n" +
	"\x05level\x18\x01 \x01(\x05R\x05level\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\"\x83\x01\n" +
	"\x0eSignatureEvent\x129\n" +
	"\bmetadata\x18\x01 \x01(\v2\x1d.runtime.v1.SignatureMetadataR\bmetadata\x126\n" +
	"\afinding\x18\x02 \x01(\v2\x1c.runtime.v1.SignatureFindingR\afinding\"[\n" +
	"\x11SignatureMetadata\x12,\n" +
	"\x02id\x18\x01 \x01(\x0e2\x1c.runtime.v1.SignatureEventIDR\x02id\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\"\xd5\x03\n" +
	"\x10SignatureFinding\x12M\n" +
	"\x10stdio_via_socket\x18\x01 \x01(\v2!.runtime.v1.StdioViaSocketFindingH\x00R\x0estdioViaSocket\x12C\n" +
	"\ftty_detected\x18\x02 \x01(\v2\x1e.runtime.v1.TtyDetectedFindingH\x00R\vttyDetected\x12L\n" +
	"\x0fsocks5_detected\x18\x03 \x01(\v2!.runtime.v1.SOCKS5DetectedFindingH\x00R\x0esocks5Detected\x12S\n" +
	"\x12git_clone_detected\x18\x04 \x01(\v2#.runtime.v1.GitCloneDetectedFindingH\x00R\x10gitCloneDetected\x12\x81\x01\n" +
	"\"ingress_nightmare_exploit_detected\x18\x05 \x01(\v22.runtime.v1.IngressNightmareExploitDetectedFindingH\x00R\x1fingressNightmareExploitDetectedB\x06\n" +
	"\x04data\"W\n" +
	"\x15StdioViaSocketFinding\x12\x0e\n" +
	"\x02ip\x18\x01 \x01(\fR\x02ip\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x12\x1a\n" +
	"\bsocketfd\x18\x03 \x01(\x05R\bsocketfd\"(\n" +
	"\x12TtyDetectedFinding\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"\x97\x02\n" +
	"\x15SOCKS5DetectedFinding\x12*\n" +
	"\x04role\x18\x01 \x01(\x0e2\x16.runtime.v1.SOCKS5RoleR\x04role\x12@\n" +
	"\x0eflow_direction\x18\x02 \x01(\x0e2\x19.runtime.v1.FlowDirectionR\rflowDirection\x12 \n" +
	"\fcmd_or_reply\x18\x03 \x01(\rR\n" +
	"cmdOrReply\x12@\n" +
	"\faddress_type\x18\x04 \x01(\x0e2\x1d.runtime.v1.SOCKS5AddressTypeR\vaddressType\x12\x18\n" +
	"\aaddress\x18\x05 \x01(\fR\aaddress\x12\x12\n" +
	"\x04port\x18\x06 \x01(\rR\x04port\"\xaa\x01\n" +
	"\aSSHData\x12@\n" +
	"\x0eflow_direction\x18\x01 \x01(\x0e2\x19.runtime.v1.FlowDirectionR\rflowDirection\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1a\n" +
	"\bcomments\x18\x03 \x01(\tR\bcomments\x12'\n" +
	"\x05tuple\x18\x04 \x01(\v2\x11.runtime.v1.TupleR\x05tuple\"\x9f\x01\n" +
	"\x17GitCloneDetectedFinding\x122\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1e.runtime.v1.GitCloneRemoteTypeR\x04type\x12\x1b\n" +
	"\tfull_repo\x18\x02 \x01(\tR\bfullRepo\x12\x16\n" +
	"\x06server\x18\x03 \x01(\tR\x06server\x12\x1b\n" +
	"\trepo_path\x18\x04 \x01(\tR\brepoPath\"(\n" +
	"&IngressNightmareExploitDetectedFinding\"\xca\x03\n" +
	"\aNetflow\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x04R\ttimestamp\x12!\n" +
	"\fprocess_name\x18\x02 \x01(\tR\vprocessName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x19\n" +
	"\bpod_name\x18\x04 \x01(\tR\apodName\x12%\n" +
	"\x0econtainer_name\x18\x05 \x01(\tR\rcontainerName\x12#\n" +
	"\rworkload_name\x18\x06 \x01(\tR\fworkloadName\x12#\n" +
	"\rworkload_kind\x18\a \x01(\tR\fworkloadKind\x12\x12\n" +
	"\x04zone\x18\b \x01(\tR\x04zone\x12\x1b\n" +
	"\tnode_name\x18\r \x01(\tR\bnodeName\x12\x12\n" +
	"\x04addr\x18\t \x01(\fR\x04addr\x12\x12\n" +
	"\x04port\x18\n" +
	" \x01(\rR\x04port\x127\n" +
	"\bprotocol\x18\v \x01(\x0e2\x1b.runtime.v1.NetflowProtocolR\bprotocol\x12B\n" +
	"\fdestinations\x18\f \x03(\v2\x1e.runtime.v1.NetflowDestinationR\fdestinations\"\x87\x03\n" +
	"\x12NetflowDestination\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x19\n" +
	"\bpod_name\x18\x02 \x01(\tR\apodName\x12#\n" +
	"\rworkload_name\x18\x03 \x01(\tR\fworkloadName\x12#\n" +
	"\rworkload_kind\x18\x04 \x01(\tR\fworkloadKind\x12\x12\n" +
	"\x04zone\x18\x05 \x01(\tR\x04zone\x12!\n" +
	"\fdns_question\x18\x06 \x01(\tR\vdnsQuestion\x12\x1b\n" +
	"\tnode_name\x18\x0e \x01(\tR\bnodeName\x12\x12\n" +
	"\x04addr\x18\b \x01(\fR\x04addr\x12\x12\n" +
	"\x04port\x18\t \x01(\rR\x04port\x12\x19\n" +
	"\btx_bytes\x18\n" +
	" \x01(\x04R\atxBytes\x12\x19\n" +
	"\brx_bytes\x18\v \x01(\x04R\arxBytes\x12\x1d\n" +
	"\n" +
	"tx_packets\x18\f \x01(\x04R\ttxPackets\x12\x1d\n" +
	"\n" +
	"rx_packets\x18\r \x01(\x04R\trxPackets\"\x1f\n" +
	"\aPSIData\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x04R\x05total\"\\\n" +
	"\bPSIStats\x12'\n" +
	"\x04some\x18\x01 \x01(\v2\x13.runtime.v1.PSIDataR\x04some\x12'\n" +
	"\x04full\x18\x02 \x01(\v2\x13.runtime.v1.PSIDataR\x04full\"\x83\x02\n" +
	"\bCpuStats\x12\x1f\n" +
	"\vtotal_usage\x18\x01 \x01(\x04R\n" +
	"totalUsage\x12.\n" +
	"\x13usage_in_kernelmode\x18\x02 \x01(\x04R\x11usageInKernelmode\x12*\n" +
	"\x11usage_in_usermode\x18\x03 \x01(\x04R\x0fusageInUsermode\x12+\n" +
	"\x11throttled_periods\x18\x04 \x01(\x04R\x10throttledPeriods\x12%\n" +
	"\x0ethrottled_time\x18\x05 \x01(\x04R\rthrottledTime\x12&\n" +
	"\x03psi\x18\x06 \x01(\v2\x14.runtime.v1.PSIStatsR\x03psi\"8\n" +
	"\n" +
	"MemoryData\x12\x14\n" +
	"\x05usage\x18\x01 \x01(\x04R\x05usage\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x04R\x05limit\"\xb9\x01\n" +
	"\vMemoryStats\x12\x14\n" +
	"\x05cache\x18\x01 \x01(\x04R\x05cache\x12,\n" +
	"\x05usage\x18\x02 \x01(\v2\x16.runtime.v1.MemoryDataR\x05usage\x12>\n" +
	"\x0fswap_only_usage\x18\x04 \x01(\v2\x16.runtime.v1.MemoryDataR\rswapOnlyUsage\x12&\n" +
	"\x03psi\x18\b \x01(\v2\x14.runtime.v1.PSIStatsR\x03psi\";\n" +
	"\tPidsStats\x12\x18\n" +
	"\acurrent\x18\x01 \x01(\x04R\acurrent\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x04R\x05limit\"1\n" +
	"\aIOStats\x12&\n" +
	"\x03psi\x18\x01 \x01(\v2\x14.runtime.v1.PSIStatsR\x03psi*D\n" +
	"\rFlowDirection\x12\x10\n" +
	"\fFLOW_UNKNOWN\x10\x00\x12\x10\n" +
	"\fFLOW_INGRESS\x10\x01\x12\x0f\n" +
	"\vFLOW_EGRESS\x10\x02*\xd8\x01\n" +
	"\x10SignatureEventID\x12\x15\n" +
	"\x11SIGNATURE_UNKNOWN\x10\x00\x12\x1e\n" +
	"\x1aSIGNATURE_STDIO_VIA_SOCKET\x10\x01\x12\x1a\n" +
	"\x16SIGNATURE_TTY_DETECTED\x10\x02\x12\x1d\n" +
	"\x19SIGNATURE_SOCKS5_DETECTED\x10\x03\x12 \n" +
	"\x1cSIGNATURE_GIT_CLONE_DETECTED\x10\x04\x120\n" +
	",SIGNATURE_INGRESS_NIGHTMARE_EXPLOIT_DETECTED\x10\x05*U\n" +
	"\n" +
	"SOCKS5Role\x12\x17\n" +
	"\x13SOCKS5_ROLE_UNKNOWN\x10\x00\x12\x16\n" +
	"\x12SOCKS5_ROLE_CLIENT\x10\x01\x12\x16\n" +
	"\x12SOCKS5_ROLE_SERVER\x10\x02*\x95\x01\n" +
	"\x11SOCKS5AddressType\x12\x1f\n" +
	"\x1bSOCKS5_ADDRESS_TYPE_UNKNOWN\x10\x00\x12\x1c\n" +
	"\x18SOCKS5_ADDRESS_TYPE_IPv4\x10\x01\x12#\n" +
	"\x1fSOCKS5_ADDRESS_TYPE_DOMAIN_NAME\x10\x03\x12\x1c\n" +
	"\x18SOCKS5_ADDRESS_TYPE_IPv6\x10\x04*\xbe\x01\n" +
	"\x12GitCloneRemoteType\x12\x16\n" +
	"\x12GIT_REMOTE_UNKNOWN\x10\x00\x12\x12\n" +
	"\x0eGIT_REMOTE_SSH\x10\x01\x12\x12\n" +
	"\x0eGIT_REMOTE_GIT\x10\x02\x12\x13\n" +
	"\x0fGIT_REMOTE_HTTP\x10\x03\x12\x14\n" +
	"\x10GIT_REMOTE_HTTPS\x10\x04\x12\x12\n" +
	"\x0eGIT_REMOTE_FTP\x10\x05\x12\x13\n" +
	"\x0fGIT_REMOTE_FTPS\x10\x06\x12\x14\n" +
	"\x10GIT_REMOTE_LOCAL\x10\a*c\n" +
	"\x0fNetflowProtocol\x12\x1c\n" +
	"\x18NETFLOW_PROTOCOL_UNKNOWN\x10\x00\x12\x18\n" +
	"\x14NETFLOW_PROTOCOL_TCP\x10\x01\x12\x18\n" +
	"\x14NETFLOW_PROTOCOL_UDP\x10\x02B*Z(github.com/castai/kvisord/api/runtime/v1b\x06proto3"

var (
	file_api_v1_runtime_common_proto_rawDescOnce sync.Once
	file_api_v1_runtime_common_proto_rawDescData []byte
)

func file_api_v1_runtime_common_proto_rawDescGZIP() []byte {
	file_api_v1_runtime_common_proto_rawDescOnce.Do(func() {
		file_api_v1_runtime_common_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v1_runtime_common_proto_rawDesc), len(file_api_v1_runtime_common_proto_rawDesc)))
	})
	return file_api_v1_runtime_common_proto_rawDescData
}

var file_api_v1_runtime_common_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_api_v1_runtime_common_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_api_v1_runtime_common_proto_goTypes = []any{
	(FlowDirection)(0),                             // 0: runtime.v1.FlowDirection
	(SignatureEventID)(0),                          // 1: runtime.v1.SignatureEventID
	(SOCKS5Role)(0),                                // 2: runtime.v1.SOCKS5Role
	(SOCKS5AddressType)(0),                         // 3: runtime.v1.SOCKS5AddressType
	(GitCloneRemoteType)(0),                        // 4: runtime.v1.GitCloneRemoteType
	(NetflowProtocol)(0),                           // 5: runtime.v1.NetflowProtocol
	(*Any)(nil),                                    // 6: runtime.v1.Any
	(*Exec)(nil),                                   // 7: runtime.v1.Exec
	(*ProcessFork)(nil),                            // 8: runtime.v1.ProcessFork
	(*ProcessExit)(nil),                            // 9: runtime.v1.ProcessExit
	(*File)(nil),                                   // 10: runtime.v1.File
	(*Tuple)(nil),                                  // 11: runtime.v1.Tuple
	(*DNS)(nil),                                    // 12: runtime.v1.DNS
	(*DNSAnswers)(nil),                             // 13: runtime.v1.DNSAnswers
	(*LogEvent)(nil),                               // 14: runtime.v1.LogEvent
	(*SignatureEvent)(nil),                         // 15: runtime.v1.SignatureEvent
	(*SignatureMetadata)(nil),                      // 16: runtime.v1.SignatureMetadata
	(*SignatureFinding)(nil),                       // 17: runtime.v1.SignatureFinding
	(*StdioViaSocketFinding)(nil),                  // 18: runtime.v1.StdioViaSocketFinding
	(*TtyDetectedFinding)(nil),                     // 19: runtime.v1.TtyDetectedFinding
	(*SOCKS5DetectedFinding)(nil),                  // 20: runtime.v1.SOCKS5DetectedFinding
	(*SSHData)(nil),                                // 21: runtime.v1.SSHData
	(*GitCloneDetectedFinding)(nil),                // 22: runtime.v1.GitCloneDetectedFinding
	(*IngressNightmareExploitDetectedFinding)(nil), // 23: runtime.v1.IngressNightmareExploitDetectedFinding
	(*Netflow)(nil),                                // 24: runtime.v1.Netflow
	(*NetflowDestination)(nil),                     // 25: runtime.v1.NetflowDestination
	(*PSIData)(nil),                                // 26: runtime.v1.PSIData
	(*PSIStats)(nil),                               // 27: runtime.v1.PSIStats
	(*CpuStats)(nil),                               // 28: runtime.v1.CpuStats
	(*MemoryData)(nil),                             // 29: runtime.v1.MemoryData
	(*MemoryStats)(nil),                            // 30: runtime.v1.MemoryStats
	(*PidsStats)(nil),                              // 31: runtime.v1.PidsStats
	(*IOStats)(nil),                                // 32: runtime.v1.IOStats
}
var file_api_v1_runtime_common_proto_depIdxs = []int32{
	13, // 0: runtime.v1.DNS.answers:type_name -> runtime.v1.DNSAnswers
	0,  // 1: runtime.v1.DNS.flow_direction:type_name -> runtime.v1.FlowDirection
	11, // 2: runtime.v1.DNS.tuple:type_name -> runtime.v1.Tuple
	16, // 3: runtime.v1.SignatureEvent.metadata:type_name -> runtime.v1.SignatureMetadata
	17, // 4: runtime.v1.SignatureEvent.finding:type_name -> runtime.v1.SignatureFinding
	1,  // 5: runtime.v1.SignatureMetadata.id:type_name -> runtime.v1.SignatureEventID
	18, // 6: runtime.v1.SignatureFinding.stdio_via_socket:type_name -> runtime.v1.StdioViaSocketFinding
	19, // 7: runtime.v1.SignatureFinding.tty_detected:type_name -> runtime.v1.TtyDetectedFinding
	20, // 8: runtime.v1.SignatureFinding.socks5_detected:type_name -> runtime.v1.SOCKS5DetectedFinding
	22, // 9: runtime.v1.SignatureFinding.git_clone_detected:type_name -> runtime.v1.GitCloneDetectedFinding
	23, // 10: runtime.v1.SignatureFinding.ingress_nightmare_exploit_detected:type_name -> runtime.v1.IngressNightmareExploitDetectedFinding
	2,  // 11: runtime.v1.SOCKS5DetectedFinding.role:type_name -> runtime.v1.SOCKS5Role
	0,  // 12: runtime.v1.SOCKS5DetectedFinding.flow_direction:type_name -> runtime.v1.FlowDirection
	3,  // 13: runtime.v1.SOCKS5DetectedFinding.address_type:type_name -> runtime.v1.SOCKS5AddressType
	0,  // 14: runtime.v1.SSHData.flow_direction:type_name -> runtime.v1.FlowDirection
	11, // 15: runtime.v1.SSHData.tuple:type_name -> runtime.v1.Tuple
	4,  // 16: runtime.v1.GitCloneDetectedFinding.type:type_name -> runtime.v1.GitCloneRemoteType
	5,  // 17: runtime.v1.Netflow.protocol:type_name -> runtime.v1.NetflowProtocol
	25, // 18: runtime.v1.Netflow.destinations:type_name -> runtime.v1.NetflowDestination
	26, // 19: runtime.v1.PSIStats.some:type_name -> runtime.v1.PSIData
	26, // 20: runtime.v1.PSIStats.full:type_name -> runtime.v1.PSIData
	27, // 21: runtime.v1.CpuStats.psi:type_name -> runtime.v1.PSIStats
	29, // 22: runtime.v1.MemoryStats.usage:type_name -> runtime.v1.MemoryData
	29, // 23: runtime.v1.MemoryStats.swap_only_usage:type_name -> runtime.v1.MemoryData
	27, // 24: runtime.v1.MemoryStats.psi:type_name -> runtime.v1.PSIStats
	27, // 25: runtime.v1.IOStats.psi:type_name -> runtime.v1.PSIStats
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_api_v1_runtime_common_proto_init() }
func file_api_v1_runtime_common_proto_init() {
	if File_api_v1_runtime_common_proto != nil {
		return
	}
	file_api_v1_runtime_common_proto_msgTypes[11].OneofWrappers = []any{
		(*SignatureFinding_StdioViaSocket)(nil),
		(*SignatureFinding_TtyDetected)(nil),
		(*SignatureFinding_Socks5Detected)(nil),
		(*SignatureFinding_GitCloneDetected)(nil),
		(*SignatureFinding_IngressNightmareExploitDetected)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1_runtime_common_proto_rawDesc), len(file_api_v1_runtime_common_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v1_runtime_common_proto_goTypes,
		DependencyIndexes: file_api_v1_runtime_common_proto_depIdxs,
		EnumInfos:         file_api_v1_runtime_common_proto_enumTypes,
		MessageInfos:      file_api_v1_runtime_common_proto_msgTypes,
	}.Build()
	File_api_v1_runtime_common_proto = out.File
	file_api_v1_runtime_common_proto_goTypes = nil
	file_api_v1_runtime_common_proto_depIdxs = nil
}
