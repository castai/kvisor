name: Build

on:
  push:
    branches:
      - main
  release:
    types:
      - published
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Go 1.18
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-build-

      - name: Get release tag
        if: github.event_name == 'release'
        run: echo "RELEASE_TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Build Go binary
        run: go build -ldflags "-s -w -X main.GitCommit=$GITHUB_SHA -X main.GitRef=$GITHUB_REF -X main.Version=${RELEASE_TAG:-commit-$GITHUB_SHA}" -o bin/castai-sec-agent .
        env:
          GOOS: linux
          GOARCH: amd64
          CGO_ENABLED: 0

      - name: Run golangci-lint
        # You may pin to the exact commit or the version.
        # uses: golangci/golangci-lint-action@537aa1903e5d359d0b27dbc19ddd22c5087f3fbc
        uses: golangci/golangci-lint-action@v3.2.0
        with:
          # the token is used for fetching patch of a pull request to show only new issues
          github-token: ${{ github.token }}
          # if set to true and the action runs on a pull request - the action outputs only newly found issues
          only-new-issues: true

      - name: Test
        run: go test -race ./...

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Google Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: us-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.ARTIFACT_BUILDER_JSON_KEY }}

      - name: Build and push main
        if: github.event_name != 'release'
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: us-docker.pkg.dev/castai-hub/library/sec-agent:${{ github.sha }}

      - name: Build and push release
        if: github.event_name == 'release'
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            us-docker.pkg.dev/castai-hub/library/sec-agent:${{ env.RELEASE_TAG }}
            us-docker.pkg.dev/castai-hub/library/sec-agent:latest

      - name: FOSSA scan docker image
        if: github.event_name == 'release'
        uses: fossas/fossa-action@v1
        with:
          api-key: ${{ secrets.FOSSA_API_KEY }}
          container: us-docker.pkg.dev/castai-hub/library/sec-agent:${{ env.RELEASE_TAG }}
