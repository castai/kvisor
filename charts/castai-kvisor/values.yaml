# Declare variables to be passed into your templates.

replicas: 1
leaderElectionEnabled: false

nameOverride: ""
fullnameOverride: castai-kvisor

# By default namespace is expected to be created by castai-agent.
createNamespace: false

# Labels to add to all resources.
commonLabels: {}

# Annotations to add to all resources.
commonAnnotations: {}

image:
  repository: us-docker.pkg.dev/castai-hub/library/kvisor
  # Tag is set using Chart.yaml appVersion field.
  tag: ""
  pullPolicy: IfNotPresent

imagePullSecrets: {}

imageScanSecret: ""

# Controls `deployment.spec.strategy` field
updateStrategy:
  type: Recreate

policyEnforcement:
  enabled: false
  webhookName: "kvisor.cast.ai"
  bundles: []

# Kvisor service configuration.
kvisor:
  serviceName: "kvisor"
  servicePort: 7070
  statusPort: 7071
  certsDir: "/certs"
  certsSecret: "kvisor-certs"

# CAST AI API configuration.
castai:
  # Token to be used for authorizing agent access to the CASTAI API
  apiKey: ""

  # Name of secret with Token to be used for authorizing agent access to the API
  # apiKey and apiKeySecretRef are mutually exclusive
  # The referenced secret must provide the token in .data["API_KEY"]
  apiKeySecretRef: ""

  # CASTAI public api url.
  apiURL: "https://api.cast.ai"

  # CASTAI Cluster unique identifier.
  clusterID: ""

# Agent global configuration in yaml format. All values could be overridden with environment values.
config: |
  api:
    url: {{ .Values.castai.apiURL }}
    clusterID: {{ .Values.castai.clusterID }}
  # Settings for configuring k8s client used in castai-kvisor.
  kubeClient:
    # Client uses token based rate limiting. By default, client has 150 api request burst limit set.
    # Buffer is refilled with 25 tokens every second. During sustained load client will be capped at 25 requests / sec.
    rateLimit:
      burst: 150
      qps: 25
  log:
    level: "debug"
  deltaSyncInterval: "15s"
  linter:
    enabled: true
    scanInterval: "30s"
  kubeBench:
    enabled: true
    scanInterval: "30s"
  imageScan:
    enabled: true
    scanInterval: "15s"
    maxConcurrentScans: 3
    apiUrl: "http://kvisor.{{ .Release.Namespace }}.svc.cluster.local.:6060"
    image:
      name: "{{ .Values.image.repository }}-imgcollector:{{ .Values.image.tag | default .Chart.AppVersion }}"
      pullPolicy: IfNotPresent
    {{ if .Values.imageScanSecret }}
    pullSecret: "{{ .Values.imageScanSecret }}"
    {{ end }}
  cloudScan:
    enabled: false
    scanInterval: "1h"

# Agent global configuration for convenient overrides without changing the whole config yaml file. Final config is merged from both config and structuredConfig.
structuredConfig: {}

# Mount existing secret as config instead of config map if set`
existingSecretForConfig: ""

podAnnotations: {}
podLabels: {}

additionalEnv: {}

resources:
  requests:
    cpu: 50m
    memory: 100Mi
  limits:
    memory: 1Gi

# Pod toleration rules.
# Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: {}

# Pod node selector rules.
# Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
nodeSelector: {}

# Pod affinity rules.
# Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/os
              operator: NotIn
              values:
                - windows
            - key: kubernetes.io/arch
              operator: In
              values:
                - amd64
                - arm64

# Pod security context.
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
securityContext: {}

agentContainerSecurityContext:
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1004

serviceAccount:
  create: true
  # Annotations to add to the service account.
  annotations: {}
  name: "castai-kvisor"

metrics:
  enabled: true
  phlareEnabled: false
  scrapePort: "6060"
